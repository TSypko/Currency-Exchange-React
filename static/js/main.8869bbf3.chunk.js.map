{"version":3,"sources":["background.jpg","utils/flags/Polish Zloty.svg","utils/flags/Euro.svg","utils/flags/US Dollar.svg","utils/flags/British Pound.svg","utils/flags/Swiss Franc.svg","utils/flags/Danish krone.svg","utils/flags/Norwegian krone.svg","utils/flags/Swedish krona.svg","utils/flags/Russian rouble.svg","utils/flags/Czech koruna.svg","utils/flags/Japanese Yen.svg","utils/flags/Croatian Kuna.svg","utils/flags/Bulgarian lev.svg","utils/flags/Hungarian forint.svg","utils/flags/Romanian leu.svg","utils/flags/Icelandic krona.svg","utils/flags/Canadian dollar.svg","utils/flags/Turkish lira.svg","utils/flags/Australian dollar.svg","Globalstyle.js","Container/styled.js","Container/index.js","Header/styled.js","Header/index.js","Clock/styled.js","Clock/index.js","Clock/useCurrentDate.js","utils/countries/index.js","Form/FormField/CurrencySelector/styled.js","Form/FormField/CurrencySelector/index.js","Form/FormField/styled.js","Form/FormField/index.js","Form/FormField/ResultField/styled.js","Form/FormField/ResultField/index.js","Form/FormField/Amount/styled.js","Form/FormField/Amount/index.js","Form/styled.js","Form/index.js","Form/useFetch.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","GlobalStyles","createGlobalStyle","background","MainContainer","styled","main","Container","children","HeaderTitle","h1","Header","title","ClockContainer","div","Clock","date","useState","Date","setDate","useEffect","intervalId","setInterval","clearInterval","useCurrentDate","dateString","toLocaleDateString","weekday","day","month","timeString","toLocaleTimeString","formatDate","countries","name","shortname","flagImage","plnFlagImage","country","euroFlagImage","usdFlagImage","gbpFlagImage","chfFlagImage","dkkFlagImage","norFlagImage","sweFlagImage","rusFlagImage","czkFlagImage","jpyFlagImage","hrkFlagImage","bgnFlagImage","hufFlagImage","iskFlagImage","ronFlagImage","cadFlagImage","tryFlagImage","audFlagImage","Label","label","Select","select","Option","option","CurrencySelector","labelText","value","onChange","currencySelectorItems","sort","a","b","localeCompare","map","currency","key","Field","result","css","FormField","type","body","Result","p","Value","span","Note","Link","ResultField","currencyToName","amount","rateDate","resultString","toFixed","href","target","rel","Input","input","Amount","step","min","FormContainer","form","Fieldset","fieldset","Legend","legend","InputWrapper","FlagWrapper","FlagImage","img","FetchMessage","error","Form","rateData","URL","response","setResponse","setError","loading","setLoading","fetch","json","resData","fetchData","useFetch","isActive","ratesEntries","Object","entries","rates","setCurrencies","rate","find","setRateDate","currencies","currencyFromName","setCurrencyFromName","setCurrencyToName","setAmount","currencyFrom","currencyTo","setResult","onSubmit","event","preventDefault","src","alt","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.8869bbf3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.83b03288.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Polish Zloty.1f9d98ad.svg\";","module.exports = __webpack_public_path__ + \"static/media/Euro.2a2f6022.svg\";","module.exports = __webpack_public_path__ + \"static/media/US Dollar.2995c32d.svg\";","module.exports = __webpack_public_path__ + \"static/media/British Pound.0b2080d0.svg\";","module.exports = __webpack_public_path__ + \"static/media/Swiss Franc.1607794f.svg\";","module.exports = __webpack_public_path__ + \"static/media/Danish krone.07be1277.svg\";","module.exports = __webpack_public_path__ + \"static/media/Norwegian krone.4b57a28e.svg\";","module.exports = __webpack_public_path__ + \"static/media/Swedish krona.c37f1b98.svg\";","module.exports = __webpack_public_path__ + \"static/media/Russian rouble.7a8b3a7d.svg\";","module.exports = __webpack_public_path__ + \"static/media/Czech koruna.9c5898c6.svg\";","module.exports = __webpack_public_path__ + \"static/media/Japanese Yen.ac5b479c.svg\";","module.exports = __webpack_public_path__ + \"static/media/Croatian Kuna.3e56776d.svg\";","module.exports = __webpack_public_path__ + \"static/media/Bulgarian lev.9c604983.svg\";","module.exports = __webpack_public_path__ + \"static/media/Hungarian forint.b95aa09e.svg\";","module.exports = __webpack_public_path__ + \"static/media/Romanian leu.af4f1a84.svg\";","module.exports = __webpack_public_path__ + \"static/media/Icelandic krona.357dcb1c.svg\";","module.exports = __webpack_public_path__ + \"static/media/Canadian dollar.7cda37ce.svg\";","module.exports = __webpack_public_path__ + \"static/media/Turkish lira.657ea685.svg\";","module.exports = __webpack_public_path__ + \"static/media/Australian dollar.9a095a09.svg\";","import { createGlobalStyle } from \"styled-components\"\r\nimport background from \"./background.jpg\";\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n\r\n  html {\r\n    box-sizing: border-box;\r\n  }\r\n  *, ::after, ::before {\r\n        box-sizing: inherit;\r\n  }\r\n\r\n  body {\r\n    background: url(${background});\r\n    background-size: cover;\r\n    font-family: \"Roboto Condensed\", sans-serif;\r\n    color: #222;\r\n    font-size: 16px;\r\n    z-index: 0;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    min-height: 100vh;\r\n    &::after { \r\n        content: \"\";\r\n        background: hsla(0, 0%, 100%, 0.3);\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        bottom: 0;\r\n        right: 0;\r\n        z-index: -1;\r\n  }\r\n    \r\n}`","import styled from \"styled-components\"\r\n\r\nexport const MainContainer = styled.main`\r\n    max-width: 400px;\r\n    margin: 15px;\r\n    box-shadow: 4px 4px 10px 0px;\r\n`;","import React from 'react';\r\nimport { MainContainer } from \"./styled\"\r\n\r\nconst Container = ({ children }) => (\r\n    <MainContainer>\r\n        {children}\r\n    </MainContainer>\r\n)\r\n\r\nexport default Container;","import styled from \"styled-components\"\r\n\r\nexport const HeaderTitle = styled.h1`\r\n    margin: 0;\r\n    padding: 20px 10px;\r\n    background-color: rgb(0, 162, 255);\r\n    color: hsl(208, 100%, 97%);\r\n    text-align: center;\r\n    font-weight: 300;\r\n    text-transform: capitalize;\r\n`;","import React from \"react\";\r\nimport { HeaderTitle } from \"./styled\"\r\n\r\nconst Header = ({ title }) => (\r\n    <HeaderTitle>\r\n        {title}\r\n    </HeaderTitle>\r\n)\r\n\r\nexport default Header;","import styled from \"styled-components\"\r\n\r\nexport const ClockContainer = styled.div`\r\n    padding: 15px 10px 0px 0;\r\n    background-color: white;\r\n    margin: 0;\r\n    text-align: right;\r\n    font-size: 12px;\r\n    font-family: monospace;\r\n`;","import React from 'react';\r\nimport { ClockContainer } from \"./styled\"\r\nimport { useCurrentDate } from './useCurrentDate';\r\n\r\nconst Clock = () => {\r\n\r\n    const date = useCurrentDate();\r\n\r\n    const formatDate = (date) => {\r\n        const dateString = date.toLocaleDateString(\r\n            \"en-EN\", {\r\n            weekday: \"long\",\r\n            day: \"numeric\",\r\n            month: \"long\"\r\n        });\r\n        const timeString = date.toLocaleTimeString();\r\n        return `${dateString}, ${timeString}`\r\n    }\r\n\r\n    return (\r\n        <ClockContainer>\r\n            Today is {formatDate(date)}\r\n        </ClockContainer>\r\n    );\r\n}\r\n\r\nexport default Clock;","import { useState, useEffect } from \"react\";\r\n\r\nexport const useCurrentDate = () => {\r\n\r\n    const [date, setDate] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n            setDate(new Date());\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(intervalId);\r\n        };\r\n    }, []);\r\n\r\n    return date;\r\n};","import plnFlagImage from '../flags/Polish Zloty.svg'\r\nimport euroFlagImage from '../flags/Euro.svg'\r\nimport usdFlagImage from '../flags/US Dollar.svg'\r\nimport gbpFlagImage from '../flags/British Pound.svg'\r\nimport chfFlagImage from '../flags/Swiss Franc.svg'\r\nimport dkkFlagImage from '../flags/Danish krone.svg'\r\nimport norFlagImage from '../flags/Norwegian krone.svg'\r\nimport sweFlagImage from '../flags/Swedish krona.svg'\r\nimport rusFlagImage from '../flags/Russian rouble.svg'\r\nimport czkFlagImage from '../flags/Czech koruna.svg'\r\nimport jpyFlagImage from '../flags/Japanese Yen.svg'\r\nimport hrkFlagImage from '../flags/Croatian Kuna.svg'\r\nimport bgnFlagImage from '../flags/Bulgarian lev.svg'\r\nimport hufFlagImage from '../flags/Hungarian forint.svg'\r\nimport ronFlagImage from '../flags/Romanian leu.svg'\r\nimport iskFlagImage from '../flags/Icelandic krona.svg'\r\nimport cadFlagImage from '../flags/Canadian dollar.svg'\r\nimport tryFlagImage from '../flags/Turkish lira.svg'\r\nimport audFlagImage from '../flags/Australian dollar.svg'\r\n\r\nexport const countries = [\r\n  {\r\n    name: \"Polish Zloty\",\r\n    shortname: \"PLN\",\r\n    flagImage: plnFlagImage,\r\n    country: \"Poland\",\r\n  },\r\n  {\r\n    name: \"Euro\",\r\n    shortname: \"EUR\",\r\n    flagImage: euroFlagImage,\r\n    country: \"European Union\",\r\n  },\r\n  {\r\n    name: \"US Dollar\",\r\n    shortname: \"USD\",\r\n    flagImage: usdFlagImage,\r\n    country: \"United States of America\",\r\n  },\r\n  {\r\n    name: \"British Pound\",\r\n    shortname: \"GBP\",\r\n    flagImage: gbpFlagImage,\r\n    country: \"Great Britain\",\r\n  },\r\n  {\r\n    name: \"Swiss Franc\",\r\n    shortname: \"CHF\",\r\n    flagImage: chfFlagImage,\r\n    country: \"Switzerland\",\r\n  },\r\n  {\r\n    name: \"Danish krone\",\r\n    shortname: \"DKK\",\r\n    flagImage: dkkFlagImage,\r\n    country: \"Denmark\",\r\n  },\r\n  {\r\n    name: \"Norwegian krone\",\r\n    shortname: \"NOK\",\r\n    flagImage: norFlagImage,\r\n    country: \"Norway\",\r\n  },\r\n  {\r\n    name: \"Swedish krona\",\r\n    shortname: \"SEK\",\r\n    flagImage: sweFlagImage,\r\n    country: \"Sweden\",\r\n  },\r\n  {\r\n    name: \"Russian rouble\",\r\n    shortname: \"RUB\",\r\n    flagImage: rusFlagImage,\r\n    country: \"Russia\",\r\n  },\r\n  {\r\n    name: \"Czech koruna\",\r\n    shortname: \"CZK\",\r\n    flagImage: czkFlagImage,\r\n    country: \"Czechia\",\r\n  },\r\n  {\r\n    name: \"Japanese Yen\",\r\n    shortname: \"JPY\",\r\n    flagImage: jpyFlagImage,\r\n    country: \"Japan\",\r\n  },\r\n  {\r\n    name: \"Croatian Kuna\",\r\n    shortname: \"HRK\",\r\n    flagImage: hrkFlagImage,\r\n    country: \"Croatia\",\r\n  },\r\n  {\r\n    name: \"Bulgarian Lev\",\r\n    shortname: \"BGN\",\r\n    flagImage: bgnFlagImage,\r\n    country: \"Bulgaria\",\r\n  },\r\n  {\r\n    name: \"Hungarian forint\",\r\n    shortname: \"HUF\",\r\n    flagImage: hufFlagImage,\r\n    country: \"Hungary\",\r\n  },\r\n  {\r\n    name: \"Icelandic krona\",\r\n    shortname: \"ISK\",\r\n    flagImage: iskFlagImage,\r\n    country: \"Iceland\",\r\n  },\r\n  {\r\n    name: \"Romanian leu\",\r\n    shortname: \"RON\",\r\n    flagImage: ronFlagImage,\r\n    country: \"Romania\",\r\n  },\r\n  {\r\n    name: \"Canadian dollar\",\r\n    shortname: \"CAD\",\r\n    flagImage: cadFlagImage,\r\n    country: \"Canada\",\r\n  },\r\n  {\r\n    name: \"Turkish lira\",\r\n    shortname: \"TRY\",\r\n    flagImage: tryFlagImage,\r\n    country: \"Turkey\",\r\n  },\r\n  {\r\n    name: \"Australian dollar\",\r\n    shortname: \"AUD\",\r\n    flagImage: audFlagImage,\r\n    country: \"Australia\",\r\n  },\r\n];","import styled from \"styled-components\"\r\n\r\nexport const Label = styled.label`\r\n    margin-right: 5px;\r\n    margin-left: 10px;\r\n    border-radius: 5px;\r\n    font-size: 20px;\r\n    font-weight: 700;\r\n    text-transform: uppercase;\r\n`;\r\n\r\nexport const Select = styled.select`\r\n    margin: 10px;\r\n    padding: 15px 10px;\r\n    font-size: 20px;\r\n    border: 1px solid #00a2ff;\r\n    border-radius: 5px;\r\n`;\r\n\r\nexport const Option = styled.option`\r\n    font-size: 18px;\r\n`;\r\n","import React from 'react';\r\nimport { countries } from '../../../utils/countries';\r\nimport { Label, Select, Option } from \"./styled\"\r\n\r\nconst CurrencySelector = ({ labelText, value, onChange }) => {\r\n\r\n    const currencySelectorItems = countries.sort((a, b) => (a.name).localeCompare(b.name));\r\n\r\n    return (\r\n\r\n        <Label>\r\n            {labelText}\r\n            <Select\r\n                value={value}\r\n                onChange={onChange}\r\n            >\r\n                {currencySelectorItems.map(currency =>\r\n                    <Option\r\n                        key={currency.shortname}>\r\n                        {currency.name}\r\n                    </Option>)}\r\n            </Select>\r\n        </Label>\r\n    );\r\n}\r\n\r\nexport default CurrencySelector;","import styled, { css } from \"styled-components\"\r\n\r\nexport const Field = styled.div`\r\n    margin: 20px 0;\r\n    text-align: right;\r\n\r\n    @media (max-width: 420px) {\r\n        text-align: center;\r\n    }\r\n\r\n    ${({ result }) => result && css`\r\n        text-align: left;\r\n    `}\r\n`;","import React from 'react';\r\nimport { Field } from \"./styled\"\r\n\r\nconst FormField = ({ type, body }) => (\r\n\r\n    <Field result={type} >\r\n        {body}\r\n    </Field>\r\n);\r\n\r\nexport default FormField;","import styled from \"styled-components\";\r\n\r\nexport const Result = styled.p`\r\n    padding: 10px 20px;\r\n    font-size: 22px;\r\n    background-color: #00a2ff;\r\n    color: hsl(208, 100%, 97%);\r\n    margin-right: 5px;\r\n    border-radius: 5px;\r\n    font-weight: 400;\r\n    text-transform: uppercase;\r\n`;\r\n\r\nexport const Value = styled.span`\r\n    font-weight: 700;\r\n    margin-left: 30px;\r\n    font-size: 30px;\r\n`;\r\n\r\nexport const Note = styled.p`\r\n    font-size: 14px;\r\n    font-weight: 400;\r\n    font-style: italic;\r\n    text-align: right;\r\n`;\r\n\r\nexport const Link = styled.a`\r\n    text-decoration: none;\r\n    color: #005383;\r\n    font-size: 14px;\r\n    font-weight: 400;\r\n    font-style: italic;\r\n\r\n    &:hover {\r\n        color: #005383bd;\r\n    }\r\n\r\n    &:active {\r\n        color: #005383;\r\n    }\r\n`;\r\n\r\nexport const Date = styled.span`\r\n    font-size: 15px;\r\n    float: right;\r\n    font-style: normal;\r\n    font-weight: 700;\r\n    margin: 10px;\r\n`;\r\n","import React from 'react';\r\nimport { Result, Value, Note, Link, Date } from \"./styled\"\r\n\r\nconst ResultField = ({ result, currencyToName, amount, rateDate }) => {\r\n\r\n    const resultString =\r\n        amount\r\n            ? `${result.toFixed(2)} ${currencyToName}`\r\n            : \"\"\r\n        ;\r\n\r\n    return (\r\n        <>\r\n            <Result>\r\n                Result:\r\n                <Value>\r\n                    {resultString}\r\n                </Value>\r\n            </Result>\r\n            <Note>\r\n                Exchange rates imported from\r\n                <Link\r\n                    href=\"https://exchangeratesapi.io/\"\r\n                    target=\"__blank\" rel=\"noopener noreferrer\">\r\n                    https://exchangeratesapi.io\r\n                </Link> based on data published by the\r\n                {\" \"}\r\n                <Link\r\n                    href=\"https://www.ecb.europa.eu/stats/policy_and_exchange_rates/euro_reference_exchange_rates/html/index.en.html\"\r\n                    target=\"__blank\" rel=\"noopener noreferrer\">\r\n                    European Central Bank\r\n                </Link>\r\n                {\" \"}\r\n                from:\r\n                <Date>\r\n                    {rateDate}\r\n                </Date>\r\n            </Note>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default ResultField;","import styled from \"styled-components\"\r\n\r\nexport const Label = styled.label`\r\n    margin-right: 5px;\r\n    margin-left: 10px;\r\n    border-radius: 5px;\r\n    font-size: 20px;\r\n    font-weight: 700;\r\n    text-transform: uppercase;\r\n`;\r\nexport const Input = styled.input`\r\n    margin: 10px;\r\n    width: 180px;\r\n    padding: 15px 10px;\r\n    font-size: 20px;\r\n    border: 1px solid #00a2ff;\r\n    border-radius: 5px;\r\n\r\n    @media (max-width: 320px) {\r\n        max-width: 150px;\r\n    }\r\n`;\r\n","import React from 'react';\r\nimport { Label, Input } from \"./styled\"\r\n\r\nconst Amount = ({ value, onChange }) => (\r\n    <Label>\r\n        Amount:\r\n        <Input\r\n            type=\"number\"\r\n            step=\"0.01\"\r\n            min=\"0\"\r\n            value={value}\r\n            onChange={onChange}\r\n        />\r\n    </Label>\r\n)\r\n\r\nexport default Amount;","import styled, { css } from \"styled-components\"\r\n\r\nexport const FormContainer = styled.form`\r\n    background-color: white;\r\n    padding: 10px 15px;\r\n`;\r\n\r\nexport const Fieldset = styled.fieldset`\r\n    border-radius: 5px;\r\n    border: 2px solid #00a2ff;\r\n`;\r\n\r\nexport const Legend = styled.legend`\r\n    padding: 10px 15px;\r\n    border-radius: 5px;\r\n    border: 2px solid #00a2ff;\r\n    font-weight: 700;\r\n    text-align: right;\r\n    text-transform: uppercase;\r\n`;\r\n\r\nexport const InputWrapper = styled.div`\r\n    margin-right: 40px;\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nexport const FlagWrapper = styled.div`\r\n    text-align: center;\r\n    margin-left: 50px;\r\n`;\r\n\r\nexport const FlagImage = styled.img`\r\n    height: 50px;\r\n    border: 1px solid black;\r\n`;\r\nexport const FetchMessage = styled.div`\r\n    text-align: center;\r\n    font-size: 20px;\r\n    font-weight: 700;\r\n\r\n    ${({ error }) => error && css`\r\n        {\r\n            color: red;\r\n        }\r\n    `}\r\n`;","import React, { useState, useEffect } from 'react';\r\nimport CurrencySelector from \"./FormField/CurrencySelector\"\r\nimport FormField from \"./FormField\"\r\nimport ResultField from \"./FormField/ResultField\"\r\nimport { countries } from '../utils/countries';\r\nimport Amount from './FormField/Amount';\r\nimport { FormContainer, Fieldset, Legend, InputWrapper, FlagWrapper, FlagImage, FetchMessage } from \"./styled\"\r\nimport { useFetch } from \"./useFetch\";\r\n\r\nconst Form = () => {\r\n\r\n    const rateData = useFetch(\"https://api.exchangeratesapi.io/latest?base=PLN\");\r\n\r\n    useEffect(() => {\r\n        let isActive = true;\r\n        if (rateData.response && isActive) {\r\n            const ratesEntries = Object.entries(rateData.response.rates);\r\n            setCurrencies(countries.map(\r\n                (currency) => (\r\n                    {\r\n                        ...currency,\r\n                        rate: ratesEntries.find(([rateName]) => rateName === (currency.shortname))[1]\r\n                    }\r\n                )\r\n            )\r\n            );\r\n            setRateDate(rateData.response.date);\r\n\r\n        }\r\n        return () => isActive = false;\r\n    }, [rateData.response, rateData.error]);\r\n\r\n    const [currencies, setCurrencies] = useState(countries);\r\n    const [rateDate, setRateDate] = useState(\"\");\r\n\r\n    const [currencyFromName, setCurrencyFromName] = useState(\"Polish Zloty\");\r\n    const onSelectCurrencyFromChange = ({ target }) => setCurrencyFromName(target.value);\r\n\r\n    const [currencyToName, setCurrencyToName] = useState(\"Euro\");\r\n    const onSelectCurrencyToChange = ({ target }) => setCurrencyToName(target.value);\r\n\r\n    const [amount, setAmount] = useState(\"\");\r\n    const onAmountChange = ({ target }) => setAmount(+target.value);\r\n\r\n    const currencyFrom = currencies.find(({ name }) => name === currencyFromName);\r\n    const currencyTo = currencies.find(({ name }) => name === currencyToName);\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const [result, setResult] = useState(\"\")\r\n\r\n    useEffect(() => setResult(amount * currencyTo.rate / currencyFrom.rate), [amount, currencyTo, currencyFrom]);\r\n\r\n    return (\r\n        <FormContainer onSubmit={onFormSubmit}>\r\n            <Fieldset>\r\n                <Legend>\r\n                    Converter\r\n                </Legend>\r\n                <FetchMessage error={rateData.error}>\r\n                    {rateData.loading || rateData.error}\r\n                </FetchMessage>\r\n                {rateData.response &&\r\n                    <InputWrapper>\r\n                        <FormField\r\n                            body=\r\n                            {\r\n                                <CurrencySelector\r\n                                    labelText=\"From:\"\r\n                                    value={currencyFromName}\r\n                                    onChange={onSelectCurrencyFromChange}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FlagWrapper>\r\n                            <FlagImage\r\n                                src={currencyFrom.flagImage}\r\n                                alt={`Flag of ${currencyFrom.country}`}\r\n                            />\r\n                        </FlagWrapper>\r\n                        <FormField\r\n                            body=\r\n                            {\r\n                                <CurrencySelector\r\n                                    labelText=\"To:\"\r\n                                    value={currencyToName}\r\n                                    onChange={onSelectCurrencyToChange}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FlagWrapper>\r\n                            <FlagImage\r\n                                src={currencyTo.flagImage}\r\n                                alt={`Flag of ${currencyTo.country}`}\r\n                            />\r\n                        </FlagWrapper>\r\n                        <FormField\r\n                            body=\r\n                            {\r\n                                <Amount\r\n                                    value={amount}\r\n                                    onChange={onAmountChange}\r\n                                />\r\n                            }\r\n                        />\r\n                    </InputWrapper>}\r\n\r\n                <FormField\r\n                    type={\"result\"}\r\n                    body=\r\n                    {\r\n                        <ResultField\r\n                            result={result}\r\n                            currencyToName={currencyTo.shortname}\r\n                            amount={amount}\r\n                            rateDate={rateDate}\r\n                        />\r\n                    }\r\n                />\r\n            </Fieldset>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default Form;","import { useEffect, useState } from \"react\";\r\n\r\nexport const useFetch = (URL) => {\r\n\r\n    const [response, setResponse] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    const [loading, setLoading] = useState(\"Loading...\");\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await fetch(URL);\r\n                const resData = await response.json();\r\n                setResponse(resData);\r\n                setLoading(\"\");\r\n            } catch (error) {\r\n                setLoading(\"\");\r\n                setError(\"Unable to receive data\");\r\n            }\r\n        };\r\n        fetchData();\r\n    }, [URL]);\r\n    return { response, error, loading };\r\n};\r\n","import React from 'react';\r\nimport { GlobalStyles } from \"./Globalstyle\";\r\nimport Container from './Container';\r\nimport Header from './Header';\r\nimport Clock from './Clock';\r\nimport Form from './Form';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <>\r\n      <GlobalStyles />\r\n      <Container>\r\n        <Header title=\"simple currency exchange\" />\r\n        <Clock />\r\n        <Form\r\n        />\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}