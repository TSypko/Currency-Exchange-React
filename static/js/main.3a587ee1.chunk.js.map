{"version":3,"sources":["utils/flags/Flag_of_Poland.svg","utils/flags/Flag_of_euro.svg","utils/flags/US_44_Star_Flag.svg","utils/flags/Flag_of_the_United_Kingdom.svg","utils/flags/Flag_of_Switzerland.svg","utils/flags/Flag_of_Denmark.svg","utils/flags/Flag_of_Norway.svg","utils/flags/Flag_of_Sweden.svg","utils/flags/Flag_of_Russia.svg","utils/flags/Flag_of_Ukraine.svg","utils/flags/Flag_of_the_Czech_Republic.svg","Container/index.js","Header/index.js","CurrencySelector/index.js","FormField/index.js","ResultField/index.js","Amount/index.js","Form/index.js","utils/currencies/index.js","utils/flags/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Container","children","className","Header","title","CurrencySelector","labelText","value","onChange","FormField","formFieldType","body","ResultField","result","Amount","type","step","Form","currencies","calculateResult","useState","currencyFromName","setCurrencyFrom","currencyToName","setCurrencyTo","amount","setAmount","currencyFrom","findIndex","name","currencyTo","onSubmit","event","preventDefault","rate","shortname","target","flagImage","src","plnFlagImage","alt","euroFlagImage","usdFlagImage","gbpFlagImage","chfFlagImage","dkkFlagImage","norFlagImage","sweFlagImage","rusFlagImage","ukrFlagImage","czkFlagImage","App","setResult","toFixed","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3a587ee1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Flag_of_Poland.1f9d98ad.svg\";","module.exports = __webpack_public_path__ + \"static/media/Flag_of_euro.56bbc4f2.svg\";","module.exports = __webpack_public_path__ + \"static/media/US_44_Star_Flag.1b6ffca9.svg\";","module.exports = __webpack_public_path__ + \"static/media/Flag_of_the_United_Kingdom.68b4d830.svg\";","module.exports = __webpack_public_path__ + \"static/media/Flag_of_Switzerland.69547e25.svg\";","module.exports = __webpack_public_path__ + \"static/media/Flag_of_Denmark.07be1277.svg\";","module.exports = __webpack_public_path__ + \"static/media/Flag_of_Norway.4b57a28e.svg\";","module.exports = __webpack_public_path__ + \"static/media/Flag_of_Sweden.c37f1b98.svg\";","module.exports = __webpack_public_path__ + \"static/media/Flag_of_Russia.7a8b3a7d.svg\";","module.exports = __webpack_public_path__ + \"static/media/Flag_of_Ukraine.1aeecd60.svg\";","module.exports = __webpack_public_path__ + \"static/media/Flag_of_the_Czech_Republic.9c5898c6.svg\";","import React from 'react';\r\nimport \"./style.css\";\r\n\r\nconst Container = ({ children }) => (\r\n    <main className=\"container\">\r\n\r\n        {children}\r\n    </main>\r\n)\r\n\r\nexport default Container;","import React from 'react';\r\nimport \"./style.css\";\r\n\r\nconst Header = ({ title }) => (\r\n    <h1 className=\"header\">{title}</h1>\r\n\r\n)\r\n\r\nexport default Header;","import React from 'react';\r\nimport \"./style.css\";\r\n\r\nconst CurrencySelector = ({ labelText, value, onChange }) => (\r\n\r\n    <label className=\"currencySelector__label\">\r\n        {labelText}\r\n        <select\r\n            className=\"currencySelector__input\"\r\n            value={value}\r\n            onChange={onChange}\r\n        >\r\n            <option className=\"currencySelector__item\">Polish Zloty</option>\r\n            <option className=\"currencySelector__item\">Euro</option>\r\n            <option className=\"currencySelector__item\">US Dollar</option>\r\n            <option className=\"currencySelector__item\">British Pound</option>\r\n            <option className=\"currencySelector__item\">Swiss Franc</option>\r\n            <option className=\"currencySelector__item\">Danish krone</option>\r\n            <option className=\"currencySelector__item\">Norwegian krone</option>\r\n            <option className=\"currencySelector__item\">Swedish krona</option>\r\n            <option className=\"currencySelector__item\">Russian rouble</option>\r\n            <option className=\"currencySelector__item\">Ukrainian hryvnia</option>\r\n            <option className=\"currencySelector__item\">Czech koruna</option>\r\n        </select>\r\n    </label>\r\n);\r\n\r\nexport default CurrencySelector;","import React from 'react';\r\nimport \"./style.css\";\r\n\r\nconst FormField = ({ formFieldType, body }) => (\r\n\r\n    <div className={`formField${formFieldType ? ` ${formFieldType}` : \"\"}`}>\r\n        {body}\r\n    </div>\r\n);\r\n\r\nexport default FormField;","import React from 'react';\r\nimport \"./style.css\";\r\n\r\nconst ResultField = ({ result }) => (\r\n    <>\r\n        <p className=\"resultField__result\">Result: <span className=\"resultField__result--value\">{result}</span></p>\r\n        <p className=\"resultField__note\">\r\n            <strong>IMPORTANT!</strong> exchange rates according to National Bank of Poland from 2020-07-19\r\n    </p>\r\n    </>\r\n);\r\nexport default ResultField;","import React from 'react';\r\nimport \"./style.css\";\r\n\r\nconst Amount = ({ value, onChange }) => (\r\n    <label className=\"amount__label\"\r\n    >Amount:\r\n        <input\r\n            type=\"number\"\r\n            step=\"0.01\"\r\n            className=\"amount__input\"\r\n            value={value}\r\n            onChange={onChange}\r\n        />\r\n    </label>\r\n)\r\n\r\nexport default Amount;","import React, { useState } from 'react';\r\nimport CurrencySelector from \"../CurrencySelector\"\r\nimport FormField from \"../FormField\"\r\nimport ResultField from \"../ResultField\"\r\nimport \"./style.css\";\r\nimport Amount from '../Amount';\r\n\r\nconst Form = ({ currencies, result, calculateResult }) => {\r\n\r\n    const [currencyFromName, setCurrencyFrom] = useState(\"Polish Zloty\");\r\n    const onSelectCurrencyFromChange = ({ target }) => setCurrencyFrom(target.value);\r\n\r\n    const [currencyToName, setCurrencyTo] = useState(\"Euro\");\r\n    const onSelectCurrencyToChange = ({ target }) => setCurrencyTo(target.value);\r\n\r\n    const [amount, setAmount] = useState(\"\");\r\n    const onSetAmountChange = ({ target }) => setAmount(+target.value);\r\n\r\n\r\n    const currencyFrom = currencies[currencies.findIndex(({ name }) => name === currencyFromName)];\r\n    const currencyTo = currencies[currencies.findIndex(({ name }) => name === currencyToName)];\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <form\r\n            onSubmit={onFormSubmit}\r\n            onChange={calculateResult(amount, currencyFrom.rate, currencyTo.rate, currencyTo.shortname)}\r\n            className=\"form\">\r\n            <fieldset className=\"form__fieldset\">\r\n                <legend className=\"form__legend\">\r\n                    Conventer\r\n                </legend>\r\n                <div className=\"form__inputWrapper\">\r\n                    <FormField body={\r\n                        <CurrencySelector\r\n                            labelText={\"From:\"}\r\n                            value={currencyFromName}\r\n                            onChange={onSelectCurrencyFromChange}\r\n                        />}\r\n                    />\r\n                    <div className=\"form__currencyInFlag\">{currencyFrom.flagImage}</div>\r\n                    <FormField body={\r\n                        <CurrencySelector\r\n                            labelText={\"To:\"}\r\n                            value={currencyToName}\r\n                            onChange={onSelectCurrencyToChange}\r\n                        />}\r\n                    />\r\n                    <div className=\"form__currencyOutFlag\">{currencyTo.flagImage}</div>\r\n                    <FormField body={\r\n                        <Amount\r\n                            value={amount}\r\n                            onChange={onSetAmountChange} />\r\n                    }\r\n                    />\r\n                </div>\r\n                <FormField\r\n                    formFieldType={\"formField--result\"}\r\n                    body={<ResultField result={result} />}\r\n                />\r\n            </fieldset>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form;","import * as flag from '../flags';\r\n\r\nexport const currencies = [\r\n    {\r\n      name: \"Polish Zloty\",\r\n      shortname: \"PLN\",\r\n      rate: 1,\r\n      flagImage: flag.plnFlag(),\r\n    },\r\n    {\r\n      name: \"Euro\",\r\n      shortname: \"EUR\",\r\n      rate: 4.4827,\r\n      flagImage: flag.euroFlag(),\r\n    },\r\n    {\r\n      name: \"US Dollar\",\r\n      shortname: \"USD\",\r\n      rate: 3.9263,\r\n      flagImage: flag.usdFlag(),\r\n    },\r\n    {\r\n      name: \"British Pound\",\r\n      shortname: \"GBP\",\r\n      rate: 4.9331,\r\n      flagImage: flag.gbpFlag(),\r\n    },\r\n    {\r\n      name: \"Swiss Franc\",\r\n      shortname: \"CHF\",\r\n      rate: 4.1647,\r\n      flagImage: flag.chfFlag(),\r\n    },\r\n    {\r\n      name: \"Danish krone\",\r\n      shortname: \"DKK\",\r\n      rate: 0.6021,\r\n      flagImage: flag.dkkFlag(),\r\n    },\r\n    {\r\n      name: \"Norwegian krone\",\r\n      shortname: \"NOK\",\r\n      rate: 0.4230,\r\n      flagImage: flag.norFlag(),\r\n    },\r\n    {\r\n      name: \"Swedish krona\",\r\n      shortname: \"SEK\",\r\n      rate: 0.4338,\r\n      flagImage: flag.sweFlag(),\r\n    },\r\n    {\r\n      name: \"Russian rouble\",\r\n      shortname: \"RUB\",\r\n      rate: 0.0546,\r\n      flagImage: flag.rusFlag(),\r\n    },\r\n    {\r\n      name: \"Ukrainian hryvnia\",\r\n      shortname: \"UAH\",\r\n      rate: 0.1435,\r\n      flagImage: flag.ukrFlag(),\r\n    },\r\n    {\r\n      name: \"Czech koruna\",\r\n      shortname: \"CZK\",\r\n      rate: 0.1678,\r\n      flagImage: flag.czkFlag(),\r\n    }\r\n  ];\r\n","import React from 'react';\r\nimport plnFlagImage from '../flags/Flag_of_Poland.svg'\r\nimport euroFlagImage from '../flags/Flag_of_euro.svg'\r\nimport usdFlagImage from '../flags/US_44_Star_Flag.svg'\r\nimport gbpFlagImage from '../flags/Flag_of_the_United_Kingdom.svg'\r\nimport chfFlagImage from '../flags/Flag_of_Switzerland.svg'\r\nimport dkkFlagImage from '../flags/Flag_of_Denmark.svg'\r\nimport norFlagImage from '../flags/Flag_of_Norway.svg'\r\nimport sweFlagImage from '../flags/Flag_of_Sweden.svg'\r\nimport rusFlagImage from '../flags/Flag_of_Russia.svg'\r\nimport ukrFlagImage from '../flags/Flag_of_Ukraine.svg'\r\nimport czkFlagImage from '../flags/Flag_of_the_Czech_Republic.svg'\r\nimport \"./style.css\";\r\n\r\nexport const plnFlag = () => (\r\n    <img\r\n        src={plnFlagImage}\r\n        alt=\"Flag of Poland\"\r\n        className=\"flag\"\r\n    />\r\n)\r\nexport const euroFlag = () => (\r\n    <img\r\n        src={euroFlagImage}\r\n        alt=\"Flag of UE\"\r\n        className=\"flag\"\r\n    />\r\n)\r\nexport const usdFlag = () => (\r\n    <img\r\n        src={usdFlagImage}\r\n        alt=\"Flag of USA\"\r\n        className=\"flag\"\r\n    />\r\n)\r\nexport const gbpFlag = () => (\r\n    <img\r\n        src={gbpFlagImage}\r\n        alt=\"Flag of Great Britain\"\r\n        className=\"flag\"\r\n    />\r\n)\r\nexport const chfFlag = () => (\r\n    <img\r\n        src={chfFlagImage}\r\n        alt=\"Flag of Switzerland\"\r\n        className=\"flag\"\r\n    />\r\n)\r\nexport const dkkFlag = () => (\r\n    <img\r\n        src={dkkFlagImage}\r\n        alt=\"Flag of Denmark\"\r\n        className=\"flag\"\r\n    />\r\n)\r\nexport const norFlag = () => (\r\n    <img\r\n        src={norFlagImage}\r\n        alt=\"Flag of Norway\"\r\n        className=\"flag\"\r\n    />\r\n)\r\nexport const sweFlag = () => (\r\n    <img\r\n        src={sweFlagImage}\r\n        alt=\"Flag of Sweden\"\r\n        className=\"flag\"\r\n    />\r\n)\r\nexport const rusFlag = () => (\r\n    <img\r\n        src={rusFlagImage}\r\n        alt=\"Flag of Russia\"\r\n        className=\"flag\"\r\n    />\r\n)\r\nexport const ukrFlag = () => (\r\n    <img\r\n        src={ukrFlagImage}\r\n        alt=\"Flag of Ukraine\"\r\n        className=\"flag\"\r\n    />\r\n)\r\nexport const czkFlag = () => (\r\n    <img\r\n        src={czkFlagImage}\r\n        alt=\"Flag of Czechia\"\r\n        className=\"flag\"\r\n    />\r\n)\r\n","import React, { useState } from 'react';\r\nimport Container from './Container';\r\nimport Header from './Header';\r\nimport Form from './Form';\r\nimport { currencies } from './utils/currencies';\r\n\r\nfunction App() {\r\n\r\n  const [result, setResult] = useState(\"\");\r\n  const calculateResult = (amount, currencyFrom, currencyTo, currencyToName) => {\r\n    setResult(\r\n      amount\r\n        ? `${(amount * currencyFrom / currencyTo).toFixed(2)} ${currencyToName}`\r\n        : \"\"\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Header title=\"simple currency exchange\" />\r\n      <Form\r\n        currencies={currencies}\r\n        result={result}\r\n        calculateResult={calculateResult}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}