{"version":3,"sources":["flags/Flag_of_Poland_2.svg","flags/Flag_of_euro.svg","flags/US_44_Star_Flag.svg","flags/Flag_of_the_United_Kingdom.svg","flags/Flag_of_Switzerland.svg","Container/index.js","Header/index.js","Form/index.js","App.js","flags/index.js","serviceWorker.js","index.js"],"names":["module","exports","Container","children","className","Header","title","Form","result","currencies","useState","currencyFromName","setCurrencyFrom","currencyToName","setCurrencyTo","amount","setAmount","currencyFrom","findIndex","name","currencyTo","rate","toFixed","shortname","htmlFor","id","value","onChange","target","flagImage","type","step","App","src","plnFlagImage","alt","euroFlagImage","usdFlagImage","gbpFlagImage","chfFlagImage","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.efa4d2b3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Flag_of_Poland_2.5e767743.svg\";","module.exports = __webpack_public_path__ + \"static/media/Flag_of_euro.56bbc4f2.svg\";","module.exports = __webpack_public_path__ + \"static/media/US_44_Star_Flag.1b6ffca9.svg\";","module.exports = __webpack_public_path__ + \"static/media/Flag_of_the_United_Kingdom.68b4d830.svg\";","module.exports = __webpack_public_path__ + \"static/media/Flag_of_Switzerland.69547e25.svg\";","import React from 'react';\r\nimport \"./style.css\";\r\n\r\nconst Container = ({ children }) => (\r\n    <main className=\"container\">\r\n\r\n        {children}\r\n    </main>\r\n)\r\n\r\nexport default Container;","import React from 'react';\r\nimport \"./style.css\";\r\n\r\nconst Header = ({ title }) => (\r\n    <h1 className=\"header\">{title}</h1>\r\n\r\n)\r\n\r\nexport default Header;","import React, { useState } from 'react';\r\nimport \"./style.css\";\r\n\r\nconst Form = ({ title, currencies }) => {\r\n\r\n    const [currencyFromName, setCurrencyFrom] = useState(\"Polish Zloty\");\r\n    const onSelectCurrencyFromChange = ({ target }) => setCurrencyFrom(target.value);\r\n\r\n    const [currencyToName, setCurrencyTo] = useState(\"Euro\");\r\n    const onSelectCurrencyToChange = ({ target }) => setCurrencyTo(target.value);\r\n\r\n    const [amount, setAmount] = useState(\"\");\r\n    const onSetAmountChange = ({ target }) => setAmount(+target.value);\r\n\r\n    const currencyFrom = currencies[currencies.findIndex(({ name }) => name === currencyFromName)];\r\n    const currencyTo = currencies[currencies.findIndex(({ name }) => name === currencyToName)];\r\n\r\n    let result;\r\n    if (amount === \"\") { result = \"\" }\r\n    else result = `\r\n        ${(amount * currencyFrom.rate * (1 / currencyTo.rate)).toFixed(2)} ${currencyTo.shortname}\r\n        `;\r\n\r\n    return (\r\n        <form className=\"form\">\r\n            <fieldset className=\"form__fieldset\">\r\n                <legend className=\"form__legend\">\r\n                    {title}\r\n                </legend>\r\n                <div className=\"form__fieldWrapper\">\r\n                    <div className=\"form__field\">\r\n                        <label htmlFor=\"inputCurrencyInType\" className=\"form__label\">From:</label>\r\n                        <select\r\n                            name=\"inputCurrencyInType\"\r\n                            id=\"inputCurrencyInType\"\r\n                            className=\"form__input form__input--select\"\r\n                            value={currencyFromName}\r\n                            onChange={onSelectCurrencyFromChange}\r\n                        >\r\n                            <option className=\"form__item\">Polish Zloty</option>\r\n                            <option className=\"form__item\">Euro</option>\r\n                            <option className=\"form__item\">US Dollar</option>\r\n                            <option className=\"form__item\">British Pound</option>\r\n                            <option className=\"form__item\">Swiss Franc</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form__currencyInFlag\">{currencyFrom.flagImage}</div>\r\n                    <div className=\"form__field\">\r\n                        <label htmlFor=\"outputCurrencyType\" className=\"form__label\">To:</label>\r\n                        <select\r\n                            name=\"outputCurrencyType\"\r\n                            id=\"outputCurrencyType\"\r\n                            className=\"form__input form__input--select\"\r\n                            value={currencyToName}\r\n                            onChange={onSelectCurrencyToChange}\r\n                        >\r\n                            <option className=\"form__item\">Polish Zloty</option>\r\n                            <option className=\"form__item\">Euro</option>\r\n                            <option className=\"form__item\">US Dollar</option>\r\n                            <option className=\"form__item\">British Pound</option>\r\n                            <option className=\"form__item\">Swiss Franc</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form__currencyOutFlag\">{currencyTo.flagImage}</div>\r\n                    <div className=\"form__field \">\r\n                        <label htmlFor=\"amount\" className=\"form__label\"\r\n                        >Amount:</label>\r\n                        <input\r\n                            id=\"amount\"\r\n                            type=\"number\"\r\n                            step=\"0.01\"\r\n                            className=\"form__input form__input--amount\"\r\n                            name=\"amountIn\"\r\n                            value={amount}\r\n                            onChange={onSetAmountChange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form__field form__field--result\">\r\n                    <p className=\"form__result\">Result: <span className=\"form__result--value\">{result}</span></p>\r\n                    <p className=\"form__note\"><strong>IMPORTANT!</strong> exchange rates according to National Bank of\r\n                        Poland from 2020-06-24</p>\r\n                </div>\r\n            </fieldset>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form;","import React from 'react';\nimport Container from './Container';\nimport Header from './Header';\nimport Form from './Form';\nimport * as flag from './flags';\n\n\nfunction App() {\n\n  const currencies = [\n    {\n      name: \"Polish Zloty\",\n      shortname: \"PLN\",\n      rate: 1,\n      flagImage: flag.plnFlag(),\n    },\n    {\n      name: \"Euro\",\n      shortname: \"EUR\",\n      rate: 4.4532,\n      flagImage: flag.euroFlag(),\n    },\n    {\n      name: \"US Dollar\",\n      shortname: \"USD\",\n      rate: 3.9395,\n      flagImage: flag.usdFlag(),\n    },\n    {\n      name: \"British Pound\",\n      shortname: \"GBP\",\n      rate: 4.9256,\n      flagImage: flag.gbpFlag(),\n    },\n    {\n      name: \"Swiss Franc\",\n      shortname: \"CHF\",\n      rate: 4.1702,\n      flagImage: flag.chfFlag(),\n    }\n  ];\n\n  return (\n    <Container>\n      <Header title=\"simple currency exchange\" />\n      <Form title=\"conventer\" currencies={currencies} />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport plnFlagImage from '../flags/Flag_of_Poland_2.svg'\r\nimport euroFlagImage from '../flags/Flag_of_euro.svg'\r\nimport usdFlagImage from '../flags/US_44_Star_Flag.svg'\r\nimport gbpFlagImage from '../flags/Flag_of_the_United_Kingdom.svg'\r\nimport chfFlagImage from '../flags/Flag_of_Switzerland.svg'\r\nimport \"./style.css\";\r\n\r\nexport const plnFlag = () => (\r\n    <img\r\n        src={plnFlagImage}\r\n        alt=\"Flag of Poland\"\r\n        className=\"flag\"\r\n    />\r\n)\r\nexport const euroFlag = () => (\r\n    <img\r\n        src={euroFlagImage}\r\n        alt=\"Flag of UE\"\r\n        className=\"flag\"\r\n    />\r\n)\r\nexport const usdFlag = () => (\r\n    <img\r\n        src={usdFlagImage}\r\n        alt=\"Flag of USA\"\r\n        className=\"flag\"\r\n    />\r\n)\r\nexport const gbpFlag = () => (\r\n    <img\r\n        src={gbpFlagImage}\r\n        alt=\"Flag of Great Britain\"\r\n        className=\"flag\"\r\n    />\r\n)\r\nexport const chfFlag = () => (\r\n    <img\r\n        src={chfFlagImage}\r\n        alt=\"Flag of Switzerland\"\r\n        className=\"flag\"\r\n    />\r\n)\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}