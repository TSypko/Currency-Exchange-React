{"version":3,"sources":["utils/flags/Polish Zloty.svg","utils/flags/Euro.svg","utils/flags/US Dollar.svg","utils/flags/British Pound.svg","utils/flags/Swiss Franc.svg","utils/flags/Danish krone.svg","utils/flags/Norwegian krone.svg","utils/flags/Swedish krona.svg","utils/flags/Russian rouble.svg","utils/flags/Czech koruna.svg","utils/flags/Japanese Yen.svg","utils/flags/Croatian Kuna.svg","utils/flags/Bulgarian lev.svg","utils/flags/Hungarian forint.svg","utils/flags/Romanian leu.svg","utils/flags/Icelandic krona.svg","utils/flags/Canadian dollar.svg","utils/flags/Turkish lira.svg","utils/flags/Australian dollar.svg","Container/index.js","Header/index.js","Clock/index.js","utils/countries/index.js","CurrencySelector/index.js","FormField/index.js","ResultField/index.js","Amount/index.js","Form/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Container","children","className","Header","title","Clock","useState","Date","date","setDate","useEffect","intervalId","setInterval","clearInterval","dateString","toLocaleDateString","weekday","day","month","timeString","toLocaleTimeString","countries","name","shortname","flagImage","plnFlagImage","country","euroFlagImage","usdFlagImage","gbpFlagImage","chfFlagImage","dkkFlagImage","norFlagImage","sweFlagImage","rusFlagImage","czkFlagImage","jpyFlagImage","hrkFlagImage","bgnFlagImage","hufFlagImage","iskFlagImage","ronFlagImage","cadFlagImage","tryFlagImage","audFlagImage","CurrencySelector","labelText","value","onChange","currencySelectorItems","sort","a","b","localeCompare","map","currency","key","FormField","formFieldType","body","ResultField","result","currencyToName","amount","rateDate","resultString","href","target","rel","Amount","type","step","Form","currencies","setCurrencies","setRateDate","isActive","fetch","response","json","rateData","ratesEntries","Object","entries","rates","rate","find","fetchData","currencyFromName","setCurrencyFromName","setCurrencyToName","setAmount","currencyFrom","currencyTo","toFixed","onSubmit","event","preventDefault","src","alt","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gIAAAA,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,8C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,+C,gRCS5BC,G,YANG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACd,0BAAMC,UAAU,aACXD,KCGME,G,MALA,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACX,wBAAIF,UAAU,UAAUE,K,OCsBbC,G,MAvBD,WAAO,IAAD,EACQC,mBAAS,IAAIC,MADrB,mBACTC,EADS,KACHC,EADG,KAGhBC,qBAAU,WACN,IAAMC,EAAaC,aAAY,WAC3BH,EAAQ,IAAIF,QACb,KAEH,OAAO,WACHM,cAAcF,MAEnB,IAEH,IAAMG,EAAaN,EAAKO,mBAAmB,QAAS,CAAEC,QAAS,OAAQC,IAAK,UAAWC,MAAO,SACxFC,EAAaX,EAAKY,qBAExB,OACI,yBAAKlB,UAAU,SAAf,YACkBY,EADlB,KACgCK,K,8VCD3BE,EAAY,CACvB,CACEC,KAAM,eACNC,UAAW,MACXC,UAAWC,IACXC,QAAS,UAEX,CACEJ,KAAM,OACNC,UAAW,MACXC,UAAWG,IACXD,QAAS,kBAEX,CACEJ,KAAM,YACNC,UAAW,MACXC,UAAWI,IACXF,QAAS,4BAEX,CACEJ,KAAM,gBACNC,UAAW,MACXC,UAAWK,IACXH,QAAS,iBAEX,CACEJ,KAAM,cACNC,UAAW,MACXC,UAAWM,IACXJ,QAAS,eAEX,CACEJ,KAAM,eACNC,UAAW,MACXC,UAAWO,IACXL,QAAS,WAEX,CACEJ,KAAM,kBACNC,UAAW,MACXC,UAAWQ,IACXN,QAAS,UAEX,CACEJ,KAAM,gBACNC,UAAW,MACXC,UAAWS,IACXP,QAAS,UAEX,CACEJ,KAAM,iBACNC,UAAW,MACXC,UAAWU,IACXR,QAAS,UAEX,CACEJ,KAAM,eACNC,UAAW,MACXC,UAAWW,IACXT,QAAS,WAEX,CACEJ,KAAM,eACNC,UAAW,MACXC,UAAWY,IACXV,QAAS,SAEX,CACEJ,KAAM,gBACNC,UAAW,MACXC,UAAWa,IACXX,QAAS,WAEX,CACEJ,KAAM,gBACNC,UAAW,MACXC,UAAWc,IACXZ,QAAS,YAEX,CACEJ,KAAM,mBACNC,UAAW,MACXC,UAAWe,IACXb,QAAS,WAEX,CACEJ,KAAM,kBACNC,UAAW,MACXC,UAAWgB,IACXd,QAAS,WAEX,CACEJ,KAAM,eACNC,UAAW,MACXC,UAAWiB,IACXf,QAAS,WAEX,CACEJ,KAAM,kBACNC,UAAW,MACXC,UAAWkB,IACXhB,QAAS,UAEX,CACEJ,KAAM,eACNC,UAAW,MACXC,UAAWmB,IACXjB,QAAS,UAEX,CACEJ,KAAM,oBACNC,UAAW,MACXC,UAAWoB,IACXlB,QAAS,cCzGEmB,I,MAxBU,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,UAAWC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAEpCC,EAAwB5B,EAAU6B,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE7B,KAAM+B,cAAcD,EAAE9B,SAEhF,OAEI,2BAAOpB,UAAU,2BACZ4C,EACD,4BACI5C,UAAU,0BACV6C,MAAOA,EACPC,SAAUA,GAETC,EAAsBK,KAAI,SAAAC,GAAQ,OAC/B,4BACIrD,UAAU,yBACVsD,IAAKD,EAAShC,WACbgC,EAASjC,aCXnBmC,I,MAPG,SAAC,GAAD,IAAGC,EAAH,EAAGA,cAAeC,EAAlB,EAAkBA,KAAlB,OAEd,yBAAKzD,UAAS,mBAAcwD,EAAa,sBAAkBA,GAAkB,KACxEC,KC+BMC,I,MAlCK,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,OAAQC,EAAuC,EAAvCA,eAAgBC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SAE7CC,EACFF,EAAM,UACGF,EADH,YACaC,GACb,GAGV,OACI,oCACI,uBAAG5D,UAAU,uBAAb,UAEI,0BAAMA,UAAU,8BACX+D,IAGT,uBAAG/D,UAAU,qBAAb,gCACiC,uBACzBgE,KAAK,+BACLhE,UAAU,oBACViE,OAAO,UAAUC,IAAI,uBAHI,+BADjC,kCAOK,IACD,uBACIF,KAAK,6GACLhE,UAAU,oBACViE,OAAO,UAAUC,IAAI,uBAHzB,yBARJ,UAae,0BAAMlE,UAAU,qBAAqB8D,OChBjDK,I,MAbA,SAAC,GAAD,IAAGtB,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACX,2BAAO9C,UAAU,UAAjB,UAEI,2BACIoE,KAAK,SACLC,KAAK,OACLrE,UAAU,gBACV6C,MAAOA,EACPC,SAAUA,OCgHPwB,I,MAnHF,WAAO,IAAD,EAEqBlE,mBAASe,GAF9B,mBAERoD,EAFQ,KAEIC,EAFJ,OAGiBpE,mBAAS,IAH1B,mBAGR0D,EAHQ,KAGEW,EAHF,KAKfjE,qBAAU,WACN,IAAIkE,GAAW,EADH,4CAEZ,gCAAAzB,EAAA,sEAC2B0B,MAAM,mDADjC,cACUC,EADV,gBAE2BA,EAASC,OAFpC,OAEUC,EAFV,OAGUC,EAAeC,OAAOC,QAAQH,EAASI,OACzCR,IACAF,EAAcrD,EAAUiC,KACpB,SAACC,GAAD,mBAAC,eAEUA,GAFX,IAGQ8B,KAAMJ,EAAaK,MAAK,yCAA8B/B,EAAShC,aAAY,SAKvFoD,EAAYK,EAASxE,OAd7B,4CAFY,sBAqBZ,OArBY,mCAoBZ+E,GACO,WAAQX,GAAW,KAC3B,IA3BY,MA6BiCtE,mBAAS,gBA7B1C,mBA6BRkF,EA7BQ,KA6BUC,EA7BV,OAgC6BnF,mBAAS,QAhCtC,mBAgCRwD,EAhCQ,KAgCQ4B,EAhCR,OAmCapF,mBAAS,IAnCtB,mBAmCRyD,EAnCQ,KAmCA4B,EAnCA,KAsCTC,EAAenB,EAAWa,MAAK,qBAAGhE,OAAoBkE,KACtDK,EAAapB,EAAWa,MAAK,qBAAGhE,OAAoBwC,KAMpDD,GAAUE,EAAS8B,EAAWR,KAAOO,EAAaP,MAAMS,QAAQ,GAEtE,OACI,0BACIC,SARa,SAACC,GAClBA,EAAMC,kBAQF/F,UAAU,QACV,8BAAUA,UAAU,kBAChB,4BAAQA,UAAU,gBAAlB,aAGA,yBAAKA,UAAU,sBACX,kBAAC,GAAD,CACIyD,KAEI,kBAAC,GAAD,CACIb,UAAU,QACVC,MAAOyC,EACPxC,SAhCO,SAAC,GAAD,IAAGmB,EAAH,EAAGA,OAAH,OAAgBsB,EAAoBtB,EAAOpB,YAoC9D,yBAAK7C,UAAU,wBACX,yBACIgG,IAAKN,EAAapE,UAClB2E,IAAG,kBAAaP,EAAalE,SAC7BxB,UAAU,gBAElB,kBAAC,GAAD,CACIyD,KAEI,kBAAC,GAAD,CACIb,UAAU,MACVC,MAAOe,EACPd,SA7CK,SAAC,GAAD,IAAGmB,EAAH,EAAGA,OAAH,OAAgBuB,EAAkBvB,EAAOpB,YAiD1D,yBAAK7C,UAAU,yBACX,yBACIgG,IAAKL,EAAWrE,UAChB2E,IAAG,kBAAaN,EAAWnE,SAC3BxB,UAAU,gBAElB,kBAAC,GAAD,CACIyD,KAEI,kBAAC,GAAD,CACIZ,MAAOgB,EACPf,SAzDL,SAAC,GAAD,IAAGmB,EAAH,EAAGA,OAAH,OAAgBwB,GAAWxB,EAAOpB,aA8D7C,kBAAC,GAAD,CACIW,cAAe,SACfC,KAEI,kBAAC,GAAD,CACIE,OAAQA,EACRC,eAAgB+B,EAAWtE,UAC3BwC,OAAQA,EACRC,SAAUA,UChGvBoC,OAZf,WAEE,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAQhG,MAAM,6BACd,kBAAC,EAAD,MACA,kBAAC,GAAD,QCAciG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.da828677.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Polish Zloty.1f9d98ad.svg\";","module.exports = __webpack_public_path__ + \"static/media/Euro.2a2f6022.svg\";","module.exports = __webpack_public_path__ + \"static/media/US Dollar.2995c32d.svg\";","module.exports = __webpack_public_path__ + \"static/media/British Pound.0b2080d0.svg\";","module.exports = __webpack_public_path__ + \"static/media/Swiss Franc.1607794f.svg\";","module.exports = __webpack_public_path__ + \"static/media/Danish krone.07be1277.svg\";","module.exports = __webpack_public_path__ + \"static/media/Norwegian krone.4b57a28e.svg\";","module.exports = __webpack_public_path__ + \"static/media/Swedish krona.c37f1b98.svg\";","module.exports = __webpack_public_path__ + \"static/media/Russian rouble.7a8b3a7d.svg\";","module.exports = __webpack_public_path__ + \"static/media/Czech koruna.9c5898c6.svg\";","module.exports = __webpack_public_path__ + \"static/media/Japanese Yen.ac5b479c.svg\";","module.exports = __webpack_public_path__ + \"static/media/Croatian Kuna.3e56776d.svg\";","module.exports = __webpack_public_path__ + \"static/media/Bulgarian lev.9c604983.svg\";","module.exports = __webpack_public_path__ + \"static/media/Hungarian forint.b95aa09e.svg\";","module.exports = __webpack_public_path__ + \"static/media/Romanian leu.af4f1a84.svg\";","module.exports = __webpack_public_path__ + \"static/media/Icelandic krona.357dcb1c.svg\";","module.exports = __webpack_public_path__ + \"static/media/Canadian dollar.7cda37ce.svg\";","module.exports = __webpack_public_path__ + \"static/media/Turkish lira.657ea685.svg\";","module.exports = __webpack_public_path__ + \"static/media/Australian dollar.9a095a09.svg\";","import React from 'react';\r\nimport \"./style.css\";\r\n\r\nconst Container = ({ children }) => (\r\n    <main className=\"container\">\r\n        {children}\r\n    </main>\r\n)\r\n\r\nexport default Container;","import React from 'react';\r\nimport \"./style.css\";\r\n\r\nconst Header = ({ title }) => (\r\n    <h1 className=\"header\">{title}</h1>\r\n\r\n)\r\n\r\nexport default Header;","import React, { useState, useEffect } from 'react';\r\nimport './style.css'\r\n\r\nconst Clock = () => {\r\n    const [date, setDate] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n            setDate(new Date());\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(intervalId);\r\n        };\r\n    }, []);\r\n\r\n    const dateString = date.toLocaleDateString(\"en-EN\", { weekday: \"long\", day: \"numeric\", month: \"long\" });\r\n    const timeString = date.toLocaleTimeString();\r\n\r\n    return (\r\n        <div className=\"clock\">\r\n                Today is {dateString}, {timeString}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Clock;","import plnFlagImage from '../flags/Polish Zloty.svg'\r\nimport euroFlagImage from '../flags/Euro.svg'\r\nimport usdFlagImage from '../flags/US Dollar.svg'\r\nimport gbpFlagImage from '../flags/British Pound.svg'\r\nimport chfFlagImage from '../flags/Swiss Franc.svg'\r\nimport dkkFlagImage from '../flags/Danish krone.svg'\r\nimport norFlagImage from '../flags/Norwegian krone.svg'\r\nimport sweFlagImage from '../flags/Swedish krona.svg'\r\nimport rusFlagImage from '../flags/Russian rouble.svg'\r\nimport czkFlagImage from '../flags/Czech koruna.svg'\r\nimport jpyFlagImage from '../flags/Japanese Yen.svg'\r\nimport hrkFlagImage from '../flags/Croatian Kuna.svg'\r\nimport bgnFlagImage from '../flags/Bulgarian lev.svg'\r\nimport hufFlagImage from '../flags/Hungarian forint.svg'\r\nimport ronFlagImage from '../flags/Romanian leu.svg'\r\nimport iskFlagImage from '../flags/Icelandic krona.svg'\r\nimport cadFlagImage from '../flags/Canadian dollar.svg'\r\nimport tryFlagImage from '../flags/Turkish lira.svg'\r\nimport audFlagImage from '../flags/Australian dollar.svg'\r\n\r\nexport const countries = [\r\n  {\r\n    name: \"Polish Zloty\",\r\n    shortname: \"PLN\",\r\n    flagImage: plnFlagImage,\r\n    country: \"Poland\",\r\n  },\r\n  {\r\n    name: \"Euro\",\r\n    shortname: \"EUR\",\r\n    flagImage: euroFlagImage,\r\n    country: \"European Union\",\r\n  },\r\n  {\r\n    name: \"US Dollar\",\r\n    shortname: \"USD\",\r\n    flagImage: usdFlagImage,\r\n    country: \"United States of America\",\r\n  },\r\n  {\r\n    name: \"British Pound\",\r\n    shortname: \"GBP\",\r\n    flagImage: gbpFlagImage,\r\n    country: \"Great Britain\",\r\n  },\r\n  {\r\n    name: \"Swiss Franc\",\r\n    shortname: \"CHF\",\r\n    flagImage: chfFlagImage,\r\n    country: \"Switzerland\",\r\n  },\r\n  {\r\n    name: \"Danish krone\",\r\n    shortname: \"DKK\",\r\n    flagImage: dkkFlagImage,\r\n    country: \"Denmark\",\r\n  },\r\n  {\r\n    name: \"Norwegian krone\",\r\n    shortname: \"NOK\",\r\n    flagImage: norFlagImage,\r\n    country: \"Norway\",\r\n  },\r\n  {\r\n    name: \"Swedish krona\",\r\n    shortname: \"SEK\",\r\n    flagImage: sweFlagImage,\r\n    country: \"Sweden\",\r\n  },\r\n  {\r\n    name: \"Russian rouble\",\r\n    shortname: \"RUB\",\r\n    flagImage: rusFlagImage,\r\n    country: \"Russia\",\r\n  },\r\n  {\r\n    name: \"Czech koruna\",\r\n    shortname: \"CZK\",\r\n    flagImage: czkFlagImage,\r\n    country: \"Czechia\",\r\n  },\r\n  {\r\n    name: \"Japanese Yen\",\r\n    shortname: \"JPY\",\r\n    flagImage: jpyFlagImage,\r\n    country: \"Japan\",\r\n  },\r\n  {\r\n    name: \"Croatian Kuna\",\r\n    shortname: \"HRK\",\r\n    flagImage: hrkFlagImage,\r\n    country: \"Croatia\",\r\n  },\r\n  {\r\n    name: \"Bulgarian Lev\",\r\n    shortname: \"BGN\",\r\n    flagImage: bgnFlagImage,\r\n    country: \"Bulgaria\",\r\n  },\r\n  {\r\n    name: \"Hungarian forint\",\r\n    shortname: \"HUF\",\r\n    flagImage: hufFlagImage,\r\n    country: \"Hungary\",\r\n  },\r\n  {\r\n    name: \"Icelandic krona\",\r\n    shortname: \"ISK\",\r\n    flagImage: iskFlagImage,\r\n    country: \"Iceland\",\r\n  },\r\n  {\r\n    name: \"Romanian leu\",\r\n    shortname: \"RON\",\r\n    flagImage: ronFlagImage,\r\n    country: \"Romania\",\r\n  },\r\n  {\r\n    name: \"Canadian dollar\",\r\n    shortname: \"CAD\",\r\n    flagImage: cadFlagImage,\r\n    country: \"Canada\",\r\n  },\r\n  {\r\n    name: \"Turkish lira\",\r\n    shortname: \"TRY\",\r\n    flagImage: tryFlagImage,\r\n    country: \"Turkey\",\r\n  },\r\n  {\r\n    name: \"Australian dollar\",\r\n    shortname: \"AUD\",\r\n    flagImage: audFlagImage,\r\n    country: \"Australia\",\r\n  },\r\n];","import React from 'react';\r\nimport { countries } from '../utils/countries';\r\nimport \"./style.css\";\r\n\r\nconst CurrencySelector = ({ labelText, value, onChange }) => {\r\n\r\n    const currencySelectorItems = countries.sort((a, b) => (a.name).localeCompare(b.name));\r\n\r\n    return (\r\n\r\n        <label className=\"currencySelector__label\">\r\n            {labelText}\r\n            <select\r\n                className=\"currencySelector__input\"\r\n                value={value}\r\n                onChange={onChange}\r\n            >\r\n                {currencySelectorItems.map(currency =>\r\n                    <option\r\n                        className=\"currencySelector__item\"\r\n                        key={currency.shortname}>\r\n                        {currency.name}\r\n                    </option>)}\r\n            </select>\r\n        </label>\r\n    );\r\n}\r\n\r\nexport default CurrencySelector;","import React from 'react';\r\nimport \"./style.css\";\r\n\r\nconst FormField = ({ formFieldType, body }) => (\r\n\r\n    <div className={`formField${formFieldType ? ` formField--${formFieldType}` : \"\"}`}>\r\n        {body}\r\n    </div>\r\n);\r\n\r\nexport default FormField;","import React from 'react';\r\nimport \"./style.css\";\r\n\r\nconst ResultField = ({ result, currencyToName, amount, rateDate }) => {\r\n\r\n    const resultString =\r\n        amount\r\n            ? `${result} ${currencyToName}`\r\n            : \"\"\r\n        ;\r\n\r\n    return (\r\n        <>\r\n            <p className=\"resultField__result\">\r\n                Result:\r\n                <span className=\"resultField__result--value\">\r\n                    {resultString}\r\n                </span>\r\n            </p>\r\n            <p className=\"resultField__note\">\r\n                Exchange rates imported from <a\r\n                    href=\"https://exchangeratesapi.io/\"\r\n                    className=\"resultField__link\"\r\n                    target=\"__blank\" rel=\"noopener noreferrer\">\r\n                    https://exchangeratesapi.io\r\n                </a> based on data published by the\r\n                {\" \"}\r\n                <a\r\n                    href=\"https://www.ecb.europa.eu/stats/policy_and_exchange_rates/euro_reference_exchange_rates/html/index.en.html\"\r\n                    className=\"resultField__link\"\r\n                    target=\"__blank\" rel=\"noopener noreferrer\">\r\n                    European Central Bank\r\n                </a> from: <span className=\"resultField__date\">{rateDate}</span>\r\n            </p>\r\n        </>\r\n    )\r\n};\r\nexport default ResultField;","import React from 'react';\r\nimport \"./style.css\";\r\n\r\nconst Amount = ({ value, onChange }) => (\r\n    <label className=\"amount\"\r\n    >Amount:\r\n        <input\r\n            type=\"number\"\r\n            step=\"0.01\"\r\n            className=\"amount__input\"\r\n            value={value}\r\n            onChange={onChange}\r\n        />\r\n    </label>\r\n)\r\n\r\nexport default Amount;","import React, { useState, useEffect } from 'react';\r\nimport CurrencySelector from \"../CurrencySelector\"\r\nimport FormField from \"../FormField\"\r\nimport ResultField from \"../ResultField\"\r\nimport { countries } from '../utils/countries';\r\nimport Amount from '../Amount';\r\nimport \"./style.css\";\r\n\r\nconst Form = () => {\r\n\r\n    const [currencies, setCurrencies] = useState(countries);\r\n    const [rateDate, setRateDate] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        let isActive = true;\r\n        async function fetchData() {\r\n            const response = await fetch('https://api.exchangeratesapi.io/latest?base=PLN');\r\n            const rateData = await response.json();\r\n            const ratesEntries = Object.entries(rateData.rates);\r\n            if (isActive) {\r\n                setCurrencies(countries.map(\r\n                    (currency) => (\r\n                        {\r\n                            ...currency,\r\n                            rate: ratesEntries.find(([rateName]) => rateName === (currency.shortname))[1]\r\n                        }\r\n                    )\r\n                )\r\n                );\r\n                setRateDate(rateData.date);\r\n            };\r\n\r\n        };\r\n        fetchData();\r\n        return () => { isActive = false };\r\n    }, []);\r\n\r\n    const [currencyFromName, setCurrencyFromName] = useState(\"Polish Zloty\");\r\n    const onSelectCurrencyFromChange = ({ target }) => setCurrencyFromName(target.value);\r\n\r\n    const [currencyToName, setCurrencyToName] = useState(\"Euro\");\r\n    const onSelectCurrencyToChange = ({ target }) => setCurrencyToName(target.value);\r\n\r\n    const [amount, setAmount] = useState(\"\");\r\n    const onAmountChange = ({ target }) => setAmount(+target.value);\r\n\r\n    const currencyFrom = currencies.find(({ name }) => name === currencyFromName);\r\n    const currencyTo = currencies.find(({ name }) => name === currencyToName);\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const result = (amount * currencyTo.rate / currencyFrom.rate).toFixed(2);\r\n\r\n    return (\r\n        <form\r\n            onSubmit={onFormSubmit}\r\n            className=\"form\">\r\n            <fieldset className=\"form__fieldset\">\r\n                <legend className=\"form__legend\">\r\n                    Converter\r\n                </legend>\r\n                <div className=\"form__inputWrapper\">\r\n                    <FormField\r\n                        body=\r\n                        {\r\n                            <CurrencySelector\r\n                                labelText=\"From:\"\r\n                                value={currencyFromName}\r\n                                onChange={onSelectCurrencyFromChange}\r\n                            />\r\n                        }\r\n                    />\r\n                    <div className=\"form__currencyInFlag\">\r\n                        <img\r\n                            src={currencyFrom.flagImage}\r\n                            alt={`Flag of ${currencyFrom.country}`}\r\n                            className=\"form__flag\" />\r\n                    </div>\r\n                    <FormField\r\n                        body=\r\n                        {\r\n                            <CurrencySelector\r\n                                labelText=\"To:\"\r\n                                value={currencyToName}\r\n                                onChange={onSelectCurrencyToChange}\r\n                            />\r\n                        }\r\n                    />\r\n                    <div className=\"form__currencyOutFlag\">\r\n                        <img\r\n                            src={currencyTo.flagImage}\r\n                            alt={`Flag of ${currencyTo.country}`}\r\n                            className=\"form__flag\" />\r\n                    </div>\r\n                    <FormField\r\n                        body=\r\n                        {\r\n                            <Amount\r\n                                value={amount}\r\n                                onChange={onAmountChange}\r\n                            />\r\n                        }\r\n                    />\r\n                </div>\r\n                <FormField\r\n                    formFieldType={\"result\"}\r\n                    body=\r\n                    {\r\n                        <ResultField\r\n                            result={result}\r\n                            currencyToName={currencyTo.shortname}\r\n                            amount={amount}\r\n                            rateDate={rateDate}\r\n                        />\r\n                    }\r\n                />\r\n            </fieldset>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport Container from './Container';\r\nimport Header from './Header';\r\nimport Clock from './Clock';\r\nimport Form from './Form';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Container>\r\n      <Header title=\"simple currency exchange\" />\r\n      <Clock/>\r\n      <Form \r\n      />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}