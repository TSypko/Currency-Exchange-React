{"version":3,"sources":["background.jpg","utils/flags/Polish Zloty.svg","utils/flags/Euro.svg","utils/flags/US Dollar.svg","utils/flags/British Pound.svg","utils/flags/Swiss Franc.svg","utils/flags/Danish krone.svg","utils/flags/Norwegian krone.svg","utils/flags/Swedish krona.svg","utils/flags/Russian rouble.svg","utils/flags/Czech koruna.svg","utils/flags/Japanese Yen.svg","utils/flags/Croatian Kuna.svg","utils/flags/Bulgarian lev.svg","utils/flags/Hungarian forint.svg","utils/flags/Romanian leu.svg","utils/flags/Icelandic krona.svg","utils/flags/Canadian dollar.svg","utils/flags/Turkish lira.svg","utils/flags/Australian dollar.svg","utils/flags/Brazil.svg","utils/flags/China.svg","utils/flags/HongKong.svg","utils/flags/Indonesia.svg","utils/flags/Israel.svg","utils/flags/India.svg","utils/flags/SouthKorea.svg","utils/flags/Mexico.svg","utils/flags/Malaysia.svg","utils/flags/NewZealand.svg","utils/flags/Philippines.svg","utils/flags/Singapore.svg","utils/flags/Thailand.svg","utils/flags/SouthAfrica.svg","Globalstyle.js","Container/styled.js","Container/index.js","Header/styled.js","Header/index.js","Clock/styled.js","Clock/index.js","Clock/useCurrentDate.js","utils/countries/index.js","Form/FormField/CurrencySelector/index.js","Form/FormField/styled.js","Form/FormField/index.js","Form/FormField/ResultField/styled.js","Form/FormField/ResultField/index.js","Form/FormField/Amount/index.js","Form/styled.js","Form/Loading/index.js","Form/index.js","Form/useFetch.js","App.js","serviceWorker.js","theme.js","index.js"],"names":["module","exports","GlobalStyles","createGlobalStyle","background","MainContainer","styled","main","Container","children","HeaderTitle","h1","Header","title","ClockContainer","div","Clock","date","useState","Date","setDate","useEffect","intervalId","setInterval","clearInterval","useCurrentDate","dateString","toLocaleDateString","weekday","day","month","timeString","toLocaleTimeString","formatDate","countries","name","shortname","flagImage","plnFlagImage","country","LCID","euroFlagImage","usdFlagImage","gbpFlagImage","chfFlagImage","dkkFlagImage","norFlagImage","sweFlagImage","rusFlagImage","czkFlagImage","jpyFlagImage","hrkFlagImage","bgnFlagImage","hufFlagImage","iskFlagImage","ronFlagImage","cadFlagImage","tryFlagImage","audFlagImage","brlFlagImage","cnyFlagImage","hkdFlagImage","idrFlagImage","ilsFlagImage","inrFlagImage","krwFlagImage","mxnFlagImage","myrFlagImage","nzdFlagImage","phpFlagImage","sgdFlagImage","thbFlagImage","zarFlagImage","Select","withStyles","root","fontSize","TextField","StyledMenuItem","textTransform","margin","MenuItem","StyledSelect","CurrencySelector","labelText","value","onChange","currencySelectorItems","sort","a","b","localeCompare","variant","label","select","helperText","map","currency","key","Field","result","css","FormField","type","body","Result","p","Value","span","Note","Link","ResultField","currencyToName","amount","rateDate","resultString","toLocaleString","style","href","target","rel","StyledLabel","letterSpacing","fontWeight","InputLabel","Input","width","textAlign","outline","StyledInput","Amount","step","min","max","autoFocus","FormContainer","form","Fieldset","fieldset","Legend","legend","InputWrapper","FlagWrapper","FlagImage","img","FetchMessage","error","Loading","color","height","Form","rateData","url","content","loading","data","setData","setTimeout","fetch","response","ok","Error","statusText","json","responseData","console","useFetch","setCurrencies","rate","rates","setRateDate","currencies","currencyFromName","setCurrencyFromName","setCurrencyToName","setAmount","currencyFrom","find","currencyTo","setResult","onSubmit","event","preventDefault","src","alt","as","App","Boolean","window","location","hostname","match","theme","createMuiTheme","palette","primary","light","dark","contrastText","secondary","action","active","hover","selected","disabled","text","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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CEL,KAAM,mBACNC,UAAW,MACXC,UAAWgB,IACXd,QAAS,UACTC,KAAM,SAER,CACEL,KAAM,kBACNC,UAAW,MACXC,UAAWiB,KACXf,QAAS,UACTC,KAAM,SAER,CACEL,KAAM,eACNC,UAAW,MACXC,UAAWkB,IACXhB,QAAS,UACTC,KAAM,SAER,CACEL,KAAM,kBACNC,UAAW,MACXC,UAAWmB,KACXjB,QAAS,SACTC,KAAM,SAER,CACEL,KAAM,eACNC,UAAW,MACXC,UAAWoB,KACXlB,QAAS,SACTC,KAAM,SAER,CACEL,KAAM,oBACNC,UAAW,MACXC,UAAWqB,KACXnB,QAAS,YACTC,KAAM,SAER,CACEL,KAAM,iBACNC,UAAW,MACXC,UAAWsB,KACXpB,QAAS,SACTC,KAAM,SAER,CACEL,KAAM,wBACNC,UAAW,MACXC,UAAWuB,KACXrB,QAAS,QACTC,KAAM,SAER,CACEL,KAAM,mBACNC,UAAW,MACXC,UAAWwB,KACXtB,QAAS,YACTC,KAAM,SAER,CACEL,KAAM,oBACNC,UAAW,MACXC,UAAWyB,KACXvB,QAAS,YACTC,KAAM,SAER,CACEL,KAAM,iBACNC,UAAW,MACXC,UAAW0B,KACXxB,QAAS,SACTC,KAAM,SAER,CACEL,KAAM,eACNC,UAAW,MACXC,UAAW2B,KACXzB,QAAS,QACTC,KAAM,SAER,CACEL,KAAM,mBACNC,UAAW,MACXC,UAAW4B,KACX1B,QAAS,0BACTC,KAAM,SAER,CACEL,KAAM,eACNC,UAAW,MACXC,UAAW6B,KACX3B,QAAS,SACTC,KAAM,SAER,CACEL,KAAM,oBACNC,UAAW,MACXC,UAAW8B,KACX5B,QAAS,WACTC,KAAM,SAER,CACEL,KAAM,qBACNC,UAAW,MACXC,UAAW+B,KACX7B,QAAS,aACTC,KAAM,SAER,CACEL,KAAM,mBACNC,UAAW,MACXC,UAAWgC,KACX9B,QAAS,cACTC,KAAM,SAER,CACEL,KAAM,mBACNC,UAAW,MACXC,UAAWiC,KACX/B,QAAS,YACTC,KAAM,SAER,CACEL,KAAM,YACNC,UAAW,MACXC,UAAWkC,KACXhC,QAAS,WACTC,KA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","file":"static/js/main.e49ae65b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.83b03288.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Polish Zloty.1abf80fd.svg\";","module.exports = __webpack_public_path__ + \"static/media/Euro.2a2f6022.svg\";","module.exports = __webpack_public_path__ + \"static/media/US Dollar.2995c32d.svg\";","module.exports = __webpack_public_path__ + \"static/media/British Pound.0b2080d0.svg\";","module.exports = __webpack_public_path__ + \"static/media/Swiss Franc.1607794f.svg\";","module.exports = __webpack_public_path__ + \"static/media/Danish krone.07be1277.svg\";","module.exports = __webpack_public_path__ + \"static/media/Norwegian krone.4b57a28e.svg\";","module.exports = __webpack_public_path__ + \"static/media/Swedish krona.c37f1b98.svg\";","module.exports = __webpack_public_path__ + \"static/media/Russian rouble.7a8b3a7d.svg\";","module.exports = __webpack_public_path__ + \"static/media/Czech koruna.9c5898c6.svg\";","module.exports = __webpack_public_path__ + \"static/media/Japanese Yen.ac5b479c.svg\";","module.exports = __webpack_public_path__ + \"static/media/Croatian Kuna.3e56776d.svg\";","module.exports = __webpack_public_path__ + \"static/media/Bulgarian lev.3805f3f9.svg\";","module.exports = __webpack_public_path__ + \"static/media/Hungarian forint.7901a6f1.svg\";","module.exports = __webpack_public_path__ + \"static/media/Romanian leu.c95c8f3d.svg\";","module.exports = __webpack_public_path__ + \"static/media/Icelandic krona.52c82fb1.svg\";","module.exports = __webpack_public_path__ + \"static/media/Canadian dollar.b6e78ec8.svg\";","module.exports = __webpack_public_path__ + \"static/media/Turkish lira.eed11f28.svg\";","module.exports = __webpack_public_path__ + \"static/media/Australian dollar.a1dda4ca.svg\";","module.exports = __webpack_public_path__ + \"static/media/Brazil.f72a49f6.svg\";","module.exports = __webpack_public_path__ + \"static/media/China.ad40b3a7.svg\";","module.exports = __webpack_public_path__ + \"static/media/HongKong.901fbb55.svg\";","module.exports = __webpack_public_path__ + \"static/media/Indonesia.d24726de.svg\";","module.exports = __webpack_public_path__ + \"static/media/Israel.b047591e.svg\";","module.exports = __webpack_public_path__ + \"static/media/India.7fb3e9b6.svg\";","module.exports = __webpack_public_path__ + \"static/media/SouthKorea.78fa1bf3.svg\";","module.exports = __webpack_public_path__ + \"static/media/Mexico.04720099.svg\";","module.exports = __webpack_public_path__ + \"static/media/Malaysia.70a579f9.svg\";","module.exports = __webpack_public_path__ + \"static/media/NewZealand.fd348ea0.svg\";","module.exports = __webpack_public_path__ + \"static/media/Philippines.8c99d744.svg\";","module.exports = __webpack_public_path__ + \"static/media/Singapore.14be03f1.svg\";","module.exports = __webpack_public_path__ + \"static/media/Thailand.3d39bf3e.svg\";","module.exports = __webpack_public_path__ + \"static/media/SouthAfrica.8ae301f2.svg\";","import { createGlobalStyle } from \"styled-components\"\r\nimport background from \"./background.jpg\";\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n\r\n  html {\r\n    box-sizing: border-box;\r\n  }\r\n  *, ::after, ::before {\r\n        box-sizing: inherit;\r\n  }\r\n\r\n  body {\r\n    background: url(${background});\r\n    background-size: cover;\r\n    font-family: \"Roboto Condensed\", sans-serif;\r\n    color: #222;\r\n    font-size: 16px;\r\n    z-index: 0;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    min-height: 100vh;\r\n    &::after { \r\n        content: \"\";\r\n        background: hsla(0, 0%, 100%, 0.3);\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        bottom: 0;\r\n        right: 0;\r\n        z-index: -1;\r\n  }\r\n    \r\n}`","import styled from \"styled-components\"\r\n\r\nexport const MainContainer = styled.main`\r\n    max-width: 400px;\r\n    margin: 15px;\r\n    box-shadow: 4px 4px 10px 0px;\r\n`;","import React from 'react';\r\nimport { MainContainer } from \"./styled\"\r\n\r\nconst Container = ({ children }) => (\r\n    <MainContainer>\r\n        {children}\r\n    </MainContainer>\r\n)\r\n\r\nexport default Container;","import styled from \"styled-components\"\r\n\r\nexport const HeaderTitle = styled.h1`\r\n    margin: 0;\r\n    padding: 20px 10px;\r\n    background-color: rgb(0, 162, 255);\r\n    color: hsl(208, 100%, 97%);\r\n    text-align: center;\r\n    font-weight: 300;\r\n    text-transform: capitalize;\r\n`;","import React from \"react\";\r\nimport { HeaderTitle } from \"./styled\"\r\n\r\nconst Header = ({ title }) => (\r\n    <HeaderTitle>\r\n        {title}\r\n    </HeaderTitle>\r\n)\r\n\r\nexport default Header;","import styled from \"styled-components\"\r\n\r\nexport const ClockContainer = styled.div`\r\n    padding: 15px 10px 0px 0;\r\n    background-color: white;\r\n    margin: 0;\r\n    text-align: right;\r\n    font-size: 12px;\r\n    font-family: monospace;\r\n`;","import React from 'react';\r\nimport { ClockContainer } from \"./styled\"\r\nimport { useCurrentDate } from './useCurrentDate';\r\n\r\nconst Clock = () => {\r\n\r\n    const date = useCurrentDate();\r\n\r\n    const formatDate = (date) => {\r\n        const dateString = date.toLocaleDateString(\r\n            \"en-EN\", {\r\n            weekday: \"long\",\r\n            day: \"numeric\",\r\n            month: \"long\"\r\n        });\r\n        const timeString = date.toLocaleTimeString();\r\n        return `${dateString}, ${timeString}`\r\n    }\r\n\r\n    return (\r\n        <ClockContainer>\r\n            Today is {formatDate(date)}\r\n        </ClockContainer>\r\n    );\r\n}\r\n\r\nexport default Clock;","import { useState, useEffect } from \"react\";\r\n\r\nexport const useCurrentDate = () => {\r\n\r\n    const [date, setDate] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n            setDate(new Date());\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(intervalId);\r\n        };\r\n    }, []);\r\n\r\n    return date;\r\n};","import plnFlagImage from '../flags/Polish Zloty.svg';\r\nimport euroFlagImage from '../flags/Euro.svg';\r\nimport usdFlagImage from '../flags/US Dollar.svg';\r\nimport gbpFlagImage from '../flags/British Pound.svg';\r\nimport chfFlagImage from '../flags/Swiss Franc.svg';\r\nimport dkkFlagImage from '../flags/Danish krone.svg';\r\nimport norFlagImage from '../flags/Norwegian krone.svg';\r\nimport sweFlagImage from '../flags/Swedish krona.svg';\r\nimport rusFlagImage from '../flags/Russian rouble.svg';\r\nimport czkFlagImage from '../flags/Czech koruna.svg';\r\nimport jpyFlagImage from '../flags/Japanese Yen.svg';\r\nimport hrkFlagImage from '../flags/Croatian Kuna.svg';\r\nimport bgnFlagImage from '../flags/Bulgarian lev.svg';\r\nimport hufFlagImage from '../flags/Hungarian forint.svg';\r\nimport ronFlagImage from '../flags/Romanian leu.svg';\r\nimport iskFlagImage from '../flags/Icelandic krona.svg';\r\nimport cadFlagImage from '../flags/Canadian dollar.svg';\r\nimport tryFlagImage from '../flags/Turkish lira.svg';\r\nimport audFlagImage from '../flags/Australian dollar.svg';\r\nimport brlFlagImage from '../flags/Brazil.svg';\r\nimport cnyFlagImage from '../flags/China.svg';\r\nimport hkdFlagImage from '../flags/HongKong.svg';\r\nimport idrFlagImage from '../flags/Indonesia.svg';\r\nimport ilsFlagImage from '../flags/Israel.svg';\r\nimport inrFlagImage from '../flags/India.svg';\r\nimport krwFlagImage from '../flags/SouthKorea.svg';\r\nimport mxnFlagImage from '../flags/Mexico.svg';\r\nimport myrFlagImage from '../flags/Malaysia.svg';\r\nimport nzdFlagImage from '../flags/NewZealand.svg';\r\nimport phpFlagImage from '../flags/Philippines.svg';\r\nimport sgdFlagImage from '../flags/Singapore.svg';\r\nimport thbFlagImage from '../flags/Thailand.svg';\r\nimport zarFlagImage from '../flags/SouthAfrica.svg';\r\n\r\nexport const countries = [\r\n  {\r\n    name: \"Polish Zloty\",\r\n    shortname: \"PLN\",\r\n    flagImage: plnFlagImage,\r\n    country: \"Poland\",\r\n    LCID: \"pl-PL\",\r\n  },\r\n  {\r\n    name: \"Euro\",\r\n    shortname: \"EUR\",\r\n    flagImage: euroFlagImage,\r\n    country: \"European Union\",\r\n    LCID: \"ue-UE\",\r\n  },\r\n  {\r\n    name: \"US Dollar\",\r\n    shortname: \"USD\",\r\n    flagImage: usdFlagImage,\r\n    country: \"United States of America\",\r\n    LCID: \"en-US\",\r\n  },\r\n  {\r\n    name: \"British Pound\",\r\n    shortname: \"GBP\",\r\n    flagImage: gbpFlagImage,\r\n    country: \"Great Britain\",\r\n    LCID: \"en-GB\",\r\n  },\r\n  {\r\n    name: \"Swiss Franc\",\r\n    shortname: \"CHF\",\r\n    flagImage: chfFlagImage,\r\n    country: \"Switzerland\",\r\n    LCID: \"de-CH\",\r\n  },\r\n  {\r\n    name: \"Danish krone\",\r\n    shortname: \"DKK\",\r\n    flagImage: dkkFlagImage,\r\n    country: \"Denmark\",\r\n    LCID: \"da-DA\",\r\n  },\r\n  {\r\n    name: \"Norwegian krone\",\r\n    shortname: \"NOK\",\r\n    flagImage: norFlagImage,\r\n    country: \"Norway\",\r\n    LCID: \"no-NO\",\r\n  },\r\n  {\r\n    name: \"Swedish krona\",\r\n    shortname: \"SEK\",\r\n    flagImage: sweFlagImage,\r\n    country: \"Sweden\",\r\n    LCID: \"sv-SE\",\r\n  },\r\n  {\r\n    name: \"Russian rouble\",\r\n    shortname: \"RUB\",\r\n    flagImage: rusFlagImage,\r\n    country: \"Russia\",\r\n    LCID: \"ru-RU\",\r\n  },\r\n  {\r\n    name: \"Czech koruna\",\r\n    shortname: \"CZK\",\r\n    flagImage: czkFlagImage,\r\n    country: \"Czechia\",\r\n    LCID: \"cz-CS\",\r\n  },\r\n  {\r\n    name: \"Japanese Yen\",\r\n    shortname: \"JPY\",\r\n    flagImage: jpyFlagImage,\r\n    country: \"Japan\",\r\n    LCID: \"ja-JA\",\r\n  },\r\n  {\r\n    name: \"Croatian Kuna\",\r\n    shortname: \"HRK\",\r\n    flagImage: hrkFlagImage,\r\n    country: \"Croatia\",\r\n    LCID: \"hr-HR\",\r\n  },\r\n  {\r\n    name: \"Bulgarian Lev\",\r\n    shortname: \"BGN\",\r\n    flagImage: bgnFlagImage,\r\n    country: \"Bulgaria\",\r\n    LCID: \"bg-BG\",\r\n  },\r\n  {\r\n    name: \"Hungarian forint\",\r\n    shortname: \"HUF\",\r\n    flagImage: hufFlagImage,\r\n    country: \"Hungary\",\r\n    LCID: \"hu-HU\",\r\n  },\r\n  {\r\n    name: \"Icelandic krona\",\r\n    shortname: \"ISK\",\r\n    flagImage: iskFlagImage,\r\n    country: \"Iceland\",\r\n    LCID: \"is-IS\",\r\n  },\r\n  {\r\n    name: \"Romanian leu\",\r\n    shortname: \"RON\",\r\n    flagImage: ronFlagImage,\r\n    country: \"Romania\",\r\n    LCID: \"ro-RO\",\r\n  },\r\n  {\r\n    name: \"Canadian dollar\",\r\n    shortname: \"CAD\",\r\n    flagImage: cadFlagImage,\r\n    country: \"Canada\",\r\n    LCID: \"en-CA\",\r\n  },\r\n  {\r\n    name: \"Turkish lira\",\r\n    shortname: \"TRY\",\r\n    flagImage: tryFlagImage,\r\n    country: \"Turkey\",\r\n    LCID: \"tr-TR\",\r\n  },\r\n  {\r\n    name: \"Australian dollar\",\r\n    shortname: \"AUD\",\r\n    flagImage: audFlagImage,\r\n    country: \"Australia\",\r\n    LCID: \"en-AU\",\r\n  },\r\n  {\r\n    name: \"Brazilian real\",\r\n    shortname: \"BRL\",\r\n    flagImage: brlFlagImage,\r\n    country: \"Brazil\",\r\n    LCID: \"pt-BR\",\r\n  },\r\n  {\r\n    name: \"Chinese yuan renminbi\",\r\n    shortname: \"CNY\",\r\n    flagImage: cnyFlagImage,\r\n    country: \"China\",\r\n    LCID: \"zh-CN\",\r\n  },\r\n  {\r\n    name: \"Hong Kong dollar\",\r\n    shortname: \"HKD\",\r\n    flagImage: hkdFlagImage,\r\n    country: \"Honk Kong\",\r\n    LCID: \"zh-HK\",\r\n  },\r\n  {\r\n    name: \"Indonesian rupiah\",\r\n    shortname: \"IDR\",\r\n    flagImage: idrFlagImage,\r\n    country: \"Indonesia\",\r\n    LCID: \"id-ID\",\r\n  },\r\n  {\r\n    name: \"Israeli shekel\",\r\n    shortname: \"ILS\",\r\n    flagImage: ilsFlagImage,\r\n    country: \"Israel\",\r\n    LCID: \"iw-IL\",\r\n  },\r\n  {\r\n    name: \"Indian rupee\",\r\n    shortname: \"INR\",\r\n    flagImage: inrFlagImage,\r\n    country: \"India\",\r\n    LCID: \"en-IN\",\r\n  },\r\n  {\r\n    name: \"South Korean won\",\r\n    shortname: \"KRW\",\r\n    flagImage: krwFlagImage,\r\n    country: \"Republic of South Korea\",\r\n    LCID: \"ko-KO\",\r\n  },\r\n  {\r\n    name: \"Mexican peso\",\r\n    shortname: \"MXN\",\r\n    flagImage: mxnFlagImage,\r\n    country: \"Mexico\",\r\n    LCID: \"es-MX\",\r\n  },\r\n  {\r\n    name: \"Malaysian ringgit\",\r\n    shortname: \"MYR\",\r\n    flagImage: myrFlagImage,\r\n    country: \"Malaysia\",\r\n    LCID: \"ms-MY\",\r\n  },\r\n  {\r\n    name: \"New Zealand Dollar\",\r\n    shortname: \"NZD\",\r\n    flagImage: nzdFlagImage,\r\n    country: \"NewZealand\",\r\n    LCID: \"en-NZ\",\r\n  },\r\n  {\r\n    name: \"Phlilippine peso\",\r\n    shortname: \"PHP\",\r\n    flagImage: phpFlagImage,\r\n    country: \"Philippines\",\r\n    LCID: \"en-PH\",\r\n  },\r\n  {\r\n    name: \"Singapore dollar\",\r\n    shortname: \"SGD\",\r\n    flagImage: sgdFlagImage,\r\n    country: \"Singapore\",\r\n    LCID: \"zh-SG\",\r\n  },\r\n  {\r\n    name: \"Thai baht\",\r\n    shortname: \"THB\",\r\n    flagImage: thbFlagImage,\r\n    country: \"Thailand\",\r\n    LCID: \"th-TH\",\r\n  },\r\n  {\r\n    name: \"South Afrifcan rand\",\r\n    shortname: \"ZAR\",\r\n    flagImage: zarFlagImage,\r\n    country: \"Republic of South Africa\",\r\n    LCID: \"en-ZA\",\r\n  },\r\n];","import React from 'react';\r\nimport { countries } from '../../../utils/countries';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport styled from \"styled-components\";\r\n\r\nconst Select = withStyles({\r\n    root: {\r\n        fontSize: \"18px\",\r\n    },\r\n})(TextField);\r\n\r\nconst StyledMenuItem = withStyles({\r\n    root: {\r\n        textTransform: 'uppercase',\r\n        margin: \"5px 10px\",\r\n        fontSize: \"14px\",\r\n    },\r\n})(MenuItem);\r\n\r\nconst StyledSelect = styled(Select)`\r\n    .MuiOutlinedInput-notchedOutline {\r\n        border-color: #00a2ff;\r\n    }\r\n`;\r\n\r\nconst CurrencySelector = ({ labelText, value, onChange }) => {\r\n\r\n\r\n    const currencySelectorItems = countries.sort((a, b) => (a.name).localeCompare(b.name));\r\n\r\n    return (\r\n        <>\r\n            <StyledSelect\r\n                variant=\"outlined\"\r\n                label={labelText}\r\n                value={value}\r\n                onChange={onChange}\r\n                select\r\n                helperText=\"Please select currency\"\r\n            >\r\n                {currencySelectorItems.map(currency =>\r\n                    <StyledMenuItem\r\n                        key={currency.shortname}\r\n                        value={currency.name}\r\n                    >\r\n                        {currency.name}\r\n                    </StyledMenuItem>)}\r\n            </StyledSelect>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CurrencySelector;","import styled, { css } from \"styled-components\"\r\n\r\nexport const Field = styled.div`\r\n    margin: 10px 0;\r\n    text-align: center;\r\n\r\n    @media (max-width: 420px) {\r\n        margin: 0;\r\n        text-align: center;\r\n    }\r\n\r\n    ${({ result }) => result && css`\r\n        text-align: left;\r\n    `}\r\n`;","import React from 'react';\r\nimport { Field } from \"./styled\"\r\n\r\nconst FormField = ({ type, body }) => (\r\n\r\n    <Field result={type} >\r\n        {body}\r\n    </Field>\r\n);\r\n\r\nexport default FormField;","import styled from \"styled-components\";\r\n\r\nexport const Result = styled.p`\r\n    padding: 10px 20px;\r\n    font-size: 22px;\r\n    background-color: #00a2ff;\r\n    color: hsl(208, 100%, 97%);\r\n    margin-right: 5px;\r\n    border-radius: 5px;\r\n    font-weight: 400;\r\n    text-transform: uppercase;\r\n`;\r\n\r\nexport const Value = styled.span`\r\n    font-weight: 700;\r\n    margin-left: 10px;\r\n    font-size: 30px;\r\n    word-break: break-all;\r\n`;\r\n\r\nexport const Note = styled.p`\r\n    font-size: 14px;\r\n    font-weight: 400;\r\n    font-style: italic;\r\n    text-align: right;\r\n`;\r\n\r\nexport const Link = styled.a`\r\n    text-decoration: none;\r\n    color: #005383;\r\n    font-size: 14px;\r\n    font-weight: 400;\r\n    font-style: italic;\r\n\r\n    &:hover {\r\n        color: #005383bd;\r\n    }\r\n\r\n    &:active {\r\n        color: #005383;\r\n    }\r\n`;\r\n\r\nexport const Date = styled.span`\r\n    font-size: 15px;\r\n    float: right;\r\n    font-style: normal;\r\n    font-weight: 700;\r\n    margin: 10px;\r\n`;\r\n","import React from 'react';\r\nimport { Result, Value, Note, Link, Date } from \"./styled\"\r\n\r\nconst ResultField = ({ result, LCID, currencyToName, amount, rateDate }) => {\r\n\r\n    const resultString =\r\n        amount\r\n            ? result.toLocaleString(LCID, { style: 'currency', currency: currencyToName })\r\n            : \"\"\r\n        ;\r\n\r\n    return (\r\n        <>\r\n            <Result>\r\n                Result:\r\n                <Value>\r\n                    {resultString}\r\n                </Value>\r\n            </Result>\r\n            <Note>\r\n                Exchange rates imported from\r\n                {\" \"}\r\n                <Link\r\n                    href=\"https://exchangeratesapi.io/\"\r\n                    target=\"__blank\" rel=\"noopener noreferrer\">\r\n                    https://exchangeratesapi.io\r\n                </Link> based on data published by the\r\n                {\" \"}\r\n                <Link\r\n                    href=\"https://www.ecb.europa.eu/stats/policy_and_exchange_rates/euro_reference_exchange_rates/html/index.en.html\"\r\n                    target=\"__blank\" rel=\"noopener noreferrer\">\r\n                    European Central Bank\r\n                </Link>\r\n                {\" \"}\r\n                from:\r\n                <Date>\r\n                    {rateDate}\r\n                </Date>\r\n            </Note>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default ResultField;","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst StyledLabel = withStyles({\r\n    root: {\r\n        textTransform: 'uppercase',\r\n        margin: \"10px 10px\",\r\n        letterSpacing: \"2px\",\r\n        fontSize: \"20px\",\r\n        fontWeight: \"400\",\r\n    },\r\n})(InputLabel);\r\n\r\nconst Input = withStyles({\r\n    root: {\r\n        width: \"47%\",\r\n        textAlign: \"right\",\r\n        outline: \"none\",\r\n    },\r\n})(TextField);\r\n\r\nconst StyledInput = styled(Input)`\r\n    .MuiOutlinedInput-notchedOutline {\r\n        border-color: #00a2ff;\r\n    }\r\n`;\r\n\r\nconst Amount = ({ value, onChange }) => {\r\n\r\n  \r\n\r\n    return (\r\n        <>\r\n            <StyledLabel>Amount</StyledLabel>\r\n            <StyledInput\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                step=\"0.01\"\r\n                min=\"0\"\r\n                max=\"999999\"\r\n                autoFocus\r\n                value={value}\r\n                onChange={onChange}\r\n                helperText=\"Please enter amount\"\r\n            />\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Amount;","import styled, { css } from \"styled-components\"\r\n\r\nexport const FormContainer = styled.form`\r\n    background-color: white;\r\n    padding: 10px 15px;\r\n`;\r\n\r\nexport const Fieldset = styled.fieldset`\r\n    border-radius: 5px;\r\n    border: 2px solid #00a2ff;\r\n`;\r\n\r\nexport const Legend = styled.legend`\r\n    padding: 10px 15px;\r\n    border-radius: 5px;\r\n    border: 2px solid #00a2ff;\r\n    font-weight: 700;\r\n    text-align: right;\r\n    text-transform: uppercase;\r\n`;\r\n\r\nexport const InputWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nexport const FlagWrapper = styled.div`\r\n    text-align: center;\r\n    margin: 15px 0px;\r\n`;\r\n\r\nexport const FlagImage = styled.img`\r\n    height: 50px;\r\n    border: 1px solid black;\r\n`;\r\n\r\nexport const FetchMessage = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n    font-size: 20px;\r\n    font-weight: 700;\r\n    padding: 10px;\r\n    width: 100%;\r\n    \r\n    ${({ error }) => error && css`\r\n            color: red;\r\n    `}\r\n`;","import React from 'react'\r\nimport ReactLoading from 'react-loading';\r\n\r\nconst Loading = () => {\r\n    return (\r\n       <ReactLoading  type=\"spokes\" color=\"#00a2ff\"  height=\"30%\" width=\"30%\" />\r\n    )\r\n}\r\n\r\nexport default Loading;\r\n","import React, { useState, useEffect } from 'react';\r\nimport CurrencySelector from \"./FormField/CurrencySelector\"\r\nimport FormField from \"./FormField\"\r\nimport ResultField from \"./FormField/ResultField\"\r\nimport { countries } from '../utils/countries';\r\nimport Amount from './FormField/Amount';\r\nimport {\r\n    FormContainer,\r\n    Fieldset,\r\n    Legend,\r\n    InputWrapper,\r\n    FlagWrapper,\r\n    FlagImage,\r\n    FetchMessage\r\n} from \"./styled\"\r\nimport { useFetch } from \"./useFetch\";\r\nimport Loading from \"./Loading\";\r\n\r\nconst Form = () => {\r\n\r\n    const rateData = useFetch(\"https://api.exchangeratesapi.io/latest?base=PLN\");\r\n\r\n    useEffect(() => {\r\n        if (rateData.content) {\r\n            setCurrencies(countries.map(\r\n                (currency) => ({\r\n                    ...currency,\r\n                    rate: rateData.content.rates[currency.shortname]\r\n                })));\r\n            setRateDate(rateData.content.date);\r\n\r\n        };\r\n    }, [rateData.content]);\r\n\r\n    const [currencies, setCurrencies] = useState(countries);\r\n    const [rateDate, setRateDate] = useState(\"\");\r\n\r\n    const [currencyFromName, setCurrencyFromName] = useState(\"Euro\");\r\n    const onSelectCurrencyFromChange = ({ target }) => setCurrencyFromName(target.value);\r\n\r\n    const [currencyToName, setCurrencyToName] = useState(\"Polish Zloty\");\r\n    const onSelectCurrencyToChange = ({ target }) => setCurrencyToName(target.value);\r\n\r\n    const [amount, setAmount] = useState(\"\");\r\n    const onAmountChange = ({ target }) => setAmount(+target.value);\r\n\r\n    const currencyFrom = currencies.find(({ name }) => name === currencyFromName);\r\n    const currencyTo = currencies.find(({ name }) => name === currencyToName);\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const [result, setResult] = useState(\"\")\r\n\r\n    useEffect(() => setResult(amount * currencyTo.rate / currencyFrom.rate), [amount, currencyTo, currencyFrom]);\r\n\r\n    return (\r\n        <FormContainer onSubmit={onFormSubmit}>\r\n            <Fieldset>\r\n                <Legend>\r\n                    Converter\r\n                </Legend>\r\n                {!rateData.content\r\n                    ? (\r\n                        <>\r\n                            <FetchMessage as=\"p\" error={rateData.error}>\r\n                                {\r\n                                    rateData.loading\r\n                                        ? \"Loading...\"\r\n                                        : rateData.error = \"Unable receive data. Try again later\"\r\n                                }\r\n                            </FetchMessage>\r\n                            <FetchMessage>\r\n                                {rateData.loading && <Loading />}\r\n                            </FetchMessage >\r\n                        </>\r\n                    )\r\n                    :\r\n                    <>\r\n                        <InputWrapper>\r\n                            <FormField\r\n                                body=\r\n                                {\r\n                                    <CurrencySelector\r\n                                        labelText=\"From\"\r\n                                        value={currencyFromName}\r\n                                        onChange={onSelectCurrencyFromChange}\r\n                                    />\r\n                                }\r\n                            />\r\n                            <FlagWrapper>\r\n                                <FlagImage\r\n                                    src={currencyFrom.flagImage}\r\n                                    alt={`Flag of ${currencyFrom.country}`}\r\n                                />\r\n                            </FlagWrapper>\r\n                            <FormField\r\n                                body=\r\n                                {\r\n                                    <CurrencySelector\r\n                                        labelText=\"To\"\r\n                                        value={currencyToName}\r\n                                        onChange={onSelectCurrencyToChange}\r\n                                    />\r\n                                }\r\n                            />\r\n                            <FlagWrapper>\r\n                                <FlagImage\r\n                                    src={currencyTo.flagImage}\r\n                                    alt={`Flag of ${currencyTo.country}`}\r\n                                />\r\n                            </FlagWrapper>\r\n                            <FormField\r\n                                body=\r\n                                {\r\n                                    <Amount\r\n                                        value={amount}\r\n                                        onChange={onAmountChange}\r\n                                    />\r\n                                }\r\n                            />\r\n                        </InputWrapper>\r\n                        <FormField\r\n                            type={\"result\"}\r\n                            body=\r\n                            {\r\n                                <ResultField\r\n                                    result={result}\r\n                                    LCID={currencyTo.LCID}\r\n                                    currencyToName={currencyTo.shortname}\r\n                                    amount={amount}\r\n                                    rateDate={rateDate}\r\n                                />\r\n                            }\r\n                        />\r\n                    </>\r\n                }\r\n            </Fieldset>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default Form;","import { useEffect, useState } from \"react\";\r\n\r\nexport const useFetch = (url) => {\r\n\r\n    const [data, setData] = useState({\r\n        content: null,\r\n        loading: null,\r\n        error: null,\r\n    });\r\n\r\n    useEffect(() => {\r\n        setData({\r\n            loading: true\r\n        });\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await fetch(url);\r\n                if (!response.ok) {\r\n                    throw new Error(response.statusText);\r\n                }\r\n                const responseData = await response.json();\r\n                setData({\r\n                    content: responseData,\r\n                    loading: false,\r\n                    error: false\r\n                });\r\n            } catch (error) {\r\n                setData({\r\n                    content: null,\r\n                    loading: false,\r\n                    error: true\r\n                });\r\n                console.error(error);\r\n            };\r\n        };\r\n        setTimeout(fetchData, 1000);\r\n    }, [url]);\r\n\r\n    return data;\r\n};\r\n","import React from 'react';\r\nimport { GlobalStyles } from \"./Globalstyle\";\r\nimport Container from './Container';\r\nimport Header from './Header';\r\nimport Clock from './Clock';\r\nimport Form from './Form';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <>\r\n      <GlobalStyles />\r\n      <Container>\r\n        <Header title=\"simple currency exchange\" />\r\n        <Clock />\r\n        <Form\r\n        />\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nexport const theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            light: '#757ce8',\r\n            main: '#3f50b5',\r\n            dark: '#002884',\r\n            contrastText: '#fff',\r\n        },\r\n        secondary: {\r\n            light: '#ff7961',\r\n            main: '#f44336',\r\n            dark: '#ba000d',\r\n            contrastText: '#000',\r\n        },\r\n        action: {\r\n            active: '#002884',\r\n            hover: \"#93d5fa\",\r\n            selected: \"#00a2ff\",\r\n            disabled: \"eb4034\",\r\n\r\n        },\r\n        text: {\r\n            primary: '#000',\r\n            secondary: '#222',\r\n        },\r\n\r\n    },\r\n\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport { theme } from \"./theme\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n    <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}